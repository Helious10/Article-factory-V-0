{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/auth/auth-interceptor.ts","webpack:///src/app/auth/auth.guard.ts","webpack:///src/app/auth/auth.service.ts","webpack:///src/app/auth/login/login.component.ts","webpack:///src/app/auth/login/login.component.html","webpack:///src/app/footer/footer.component.ts","webpack:///src/app/footer/footer.component.html","webpack:///src/app/header/header.component.ts","webpack:///src/app/header/header.component.html","webpack:///src/app/posts/create-post/create-post.component.ts","webpack:///src/app/posts/create-post/create-post.component.html","webpack:///src/app/posts/create-post/mime-type.validator.ts","webpack:///src/app/posts/myposts/myposts.component.ts","webpack:///src/app/posts/myposts/myposts.component.html","webpack:///src/app/posts/post-detail/post-detail.component.ts","webpack:///src/app/posts/post-detail/post-detail.component.html","webpack:///src/app/posts/post-list/post-list.component.ts","webpack:///src/app/posts/post-list/post-list.component.html","webpack:///src/app/profile/create-profile/create-profile.component.ts","webpack:///src/app/profile/create-profile/create-profile.component.html","webpack:///src/app/profile/view-profile/view-profile.component.ts","webpack:///src/app/profile/view-profile/view-profile.component.html","webpack:///src/app/services/post.service.ts","webpack:///src/app/services/profile.service.ts","webpack:///src/app/spinner/spinner.component.ts","webpack:///src/app/spinner/spinner.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","canActivate","AppRoutingModule","forRoot","useHash","imports","AppComponent","authService","profileService","title","autoAuthUser","autogetProfile","selector","templateUrl","styleUrls","AppModule","provide","useClass","multi","declarations","providers","bootstrap","AuthInterceptor","next","authToken","getToken","authRequest","clone","headers","set","handle","AuthGuard","router","route","state","isAuth","getIsAuth","navigate","BACKEND_URL","apiUrl","AuthService","http","isAuthenticated","authStatusListener","err","token","userId","asObservable","email","password","authData","post","subscribe","response","expiresInDuration","expiresIn","setAuthTimer","now","Date","expirationDate","getTime","saveAuthData","clearTimeout","tokenTimer","clearAuthData","authInformation","getAuthData","localStorage","getItem","duration","setTimeout","logout","getProfile","setItem","toISOString","removeItem","providedIn","LoginComponent","isLoginMode","isLoading","error","form","valid","value","signIn","reset","createUser","FooterComponent","HeaderComponent","userIsAuthenticated","profileisSet","getIsProfileSet","authListenerSubs","getAuthStatusListener","getProfileByCreatorId","prof","username","profile","_id","bio","imagePath","creator","unsubscribe","CreatePostComponent","ps","mode","checkProfileCreated","paramMap","has","postId","get","getPostById","createForm","getPost","postData","content","imagePreview","setValue","image","validators","required","minLength","asyncValidators","event","file","target","files","patchValue","updateValueAndValidity","reader","FileReader","onload","result","readAsDataURL","postdate","invalid","addPost","updatePost","onSavePost","onImagePicked","mimeType","control","fileReader","frObs","create","observer","addEventListener","arr","Uint8Array","subarray","header","isValid","i","length","toString","invalidMimeType","complete","readAsArrayBuffer","MypostsComponent","posts","postbyUser","isloading","getErrors","getMyPost","postsSub","getPostUpdateListener","getPostUserbyCreatorId","creatorId","push","unique","Set","getPostUserByCreatorId","user","PostDetailComponent","postsService","url","split","getUserId","authStatusSub","console","log","postDate","deletePost","PostListComponent","checkAuth","getUsers","getPosts","sortPostByDate","sort","a","b","getUserProfile","getAllUsers","CreateProfileComponent","uname","getProfileById","checkProfileExist","getProfileByUsername","profileId","addProfile","updateProfile","clearError","checkUsername","ViewProfileComponent","getCurrentUseersPost","pipe","map","data","PostService","postsUpdated","imgpath","FormData","append","responseData","transformedPosts","put","updatedPosts","filter","ProfileService","isProfileSet","updatedProfile","profileData","saveProfileData","SpinnerComponent","environment","production","bootstrapModule"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { PostListComponent } from './posts/post-list/post-list.component';\nimport { CreatePostComponent } from './posts/create-post/create-post.component';\nimport { PostDetailComponent } from './posts/post-detail/post-detail.component';\nimport { LoginComponent } from './auth/login/login.component';\nimport { AuthGuard } from './auth/auth.guard';\nimport { MypostsComponent } from './posts/myposts/myposts.component';\nimport { CreateProfileComponent } from './profile/create-profile/create-profile.component';\nimport { ViewProfileComponent } from './profile/view-profile/view-profile.component';\n\n\n\nconst routes: Routes = [\n  { path: '', component: PostListComponent },\n \n  { path: 'myposts', component: MypostsComponent ,canActivate: [AuthGuard]},\n  { path: 'create', component: CreatePostComponent ,canActivate: [AuthGuard]},\n  { path: 'login', component: LoginComponent },\n  { path: 'myposts/:postId', component: PostDetailComponent ,canActivate: [AuthGuard]},\n  { path: 'myposts/edit/:postId', component: CreatePostComponent, canActivate: [AuthGuard] },\n  { path: 'profile', component: CreateProfileComponent,canActivate: [AuthGuard] },\n  { path: 'public/:profileId', component: ViewProfileComponent },\n  { path: 'profile/:profileId', component: ViewProfileComponent,canActivate: [AuthGuard]  },\n  { path: 'profile/edit/:profileId', component: CreateProfileComponent,canActivate: [AuthGuard]  },\n  { path: 'public/:profileId/posts/:postId', component: PostDetailComponent },\n  { path: ':postId', component: PostDetailComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, { useHash: true })],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from './auth/auth.service';\nimport { ProfileService } from './services/profile.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  constructor(private authService: AuthService,\n    private profileService:ProfileService) {}\n    title = 'Article_Factory';\n  ngOnInit() {\n   \n    this.authService.autoAuthUser();\n\n    this.profileService.autogetProfile()\n  }\n}\n","<app-header></app-header>\n<router-outlet></router-outlet>\n<hr>\n<app-footer></app-footer>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {ReactiveFormsModule} from '@angular/forms'\nimport { FormsModule }   from '@angular/forms';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HeaderComponent } from './header/header.component';\nimport { PostListComponent } from './posts/post-list/post-list.component';\nimport { CreatePostComponent } from './posts/create-post/create-post.component';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from \"@angular/common/http\";\nimport { PostService } from './services/post.service';\nimport { SpinnerComponent } from './spinner/spinner.component';\nimport { PostDetailComponent } from './posts/post-detail/post-detail.component';\nimport { LoginComponent } from './auth/login/login.component';\nimport { AuthInterceptor } from './auth/auth-interceptor';\nimport { AuthService } from './auth/auth.service';\nimport { AuthGuard } from './auth/auth.guard';\nimport { MypostsComponent } from './posts/myposts/myposts.component';\nimport { CreateProfileComponent } from './profile/create-profile/create-profile.component';\nimport { ViewProfileComponent } from './profile/view-profile/view-profile.component';\nimport { HashLocationStrategy, LocationStrategy } from '@angular/common';\nimport { FooterComponent } from './footer/footer.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    PostListComponent,\n    CreatePostComponent,\n    SpinnerComponent,\n    PostDetailComponent,\n    LoginComponent,\n    MypostsComponent,\n    CreateProfileComponent,\n    ViewProfileComponent,\n    FooterComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    FormsModule\n  ],\n  providers: [PostService,\n    AuthService,AuthGuard,\n    { provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true },\n    { provide: LocationStrategy, useClass: HashLocationStrategy }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import {\n  HttpInterceptor,\n  HttpRequest,\n  HttpHandler\n} from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\n\nimport { AuthService } from \"./auth.service\";\n\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n  constructor(private authService: AuthService) { }\n\n  intercept(req: HttpRequest<any>, next: HttpHandler) {\n\n\n    const authToken = this.authService.getToken();\n    const authRequest = req.clone({\n      headers: req.headers.set(\"Authorization\", \"Bearer \" + authToken)\n    });\n    return next.handle(authRequest);\n  }\n}\n","import {\n  CanActivate,\n  ActivatedRouteSnapshot,\n  RouterStateSnapshot,\n  Router\n} from \"@angular/router\";\nimport { Injectable } from \"@angular/core\";\nimport { Observable } from \"rxjs\";\nimport { AuthService } from './auth.service';\n\n\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n  constructor(private authService: AuthService, private router: Router) { }\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): boolean | Observable<boolean> | Promise<boolean> {\n    const isAuth = this.authService.getIsAuth();\n    if (!isAuth) {\n      this.router.navigate(['/login']);\n    }\n    return isAuth;\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { BehaviorSubject, Subject } from 'rxjs';\nimport { ProfileService } from '../services/profile.service';\nimport { AuthData } from './user.model';\n\nimport {environment} from '../../environments/environment'\nconst BACKEND_URL = environment.apiUrl + \"/user/\"\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  private isAuthenticated = false;\n  private token: string;\n  private tokenTimer: any;\n  private userId: string;\n  private authStatusListener = new Subject<boolean>();\n  public err = new BehaviorSubject<any>(null);\n  constructor(private http: HttpClient, private router: Router,\n    private profileService: ProfileService) { }\n\n\n  getToken() {\n    return this.token;\n  }\n\n  getIsAuth() {\n    return this.isAuthenticated;\n  }\n\n  getUserId() {\n    return this.userId;\n  }\n  getAuthStatusListener() {\n    return this.authStatusListener.asObservable();\n  }\n\n\n  signIn(email: string, password: string) {\n    const authData: AuthData = { email: email, password: password };\n    this.http\n      .post<{ token: string; expiresIn: number, userId: string }>(\n        BACKEND_URL + \"login\",\n        authData\n      )\n      .subscribe(response => {\n\n        this.err.next(null)\n\n        const token = response.token;\n        this.token = token;\n        if (token) {\n          const expiresInDuration = response.expiresIn;\n          this.setAuthTimer(expiresInDuration);\n          this.isAuthenticated = true;\n          this.userId = response.userId;\n          this.authStatusListener.next(true);\n          const now = new Date();\n          const expirationDate = new Date(now.getTime() + expiresInDuration * 1000);\n\n          this.saveAuthData(token, expirationDate, this.userId);\n          this.router.navigate([\"/\"]);\n        }\n      },\n        err => {\n          this.err.next(err)\n        });\n  }\n\n\n  createUser(email: string, password: string) {\n    const authData: AuthData = { email: email, password: password };\n    this.http\n      .post(BACKEND_URL + \"signup\", authData)\n      .subscribe(response => {\n        this.err.next(null)\n        this.router.navigate([\"/\"]);\n\n      },\n        err => {\n          this.err.next(err)\n        });\n  }\n\n\n\n  logout() {\n    this.token = null;\n    this.isAuthenticated = false;\n    this.authStatusListener.next(false);\n    clearTimeout(this.tokenTimer);\n    this.clearAuthData();\n    this.router.navigate([\"/\"]);\n  }\n\n\n  autoAuthUser() {\n    const authInformation = this.getAuthData();\n\n    if (!authInformation) {\n      return;\n    }\n    const now = new Date();\n    const expiresIn = authInformation.expirationDate.getTime() - now.getTime();\n\n    if (expiresIn > 0) {\n      this.token = authInformation.token;\n      this.isAuthenticated = true;\n      this.userId = authInformation.userId;\n      this.setAuthTimer(expiresIn / 1000);\n      this.authStatusListener.next(true);\n    }\n  }\n\n  private getAuthData() {\n    const token = localStorage.getItem(\"token\");\n    const expirationDate = localStorage.getItem(\"expiration\");\n    const userId = localStorage.getItem(\"userId\");\n    if (!token || !expirationDate) {\n      return;\n    }\n    return {\n      token: token,\n      expirationDate: new Date(expirationDate),\n      userId: userId\n    }\n  }\n\n\n\n  private setAuthTimer(duration: number) {\n\n    this.tokenTimer = setTimeout(() => {\n      this.logout();\n    }, duration * 1000);\n  }\n\n  private saveAuthData(token: string, expirationDate: Date, userId: string) {\n    this.profileService.getProfile()\n    localStorage.setItem(\"token\", token);\n    localStorage.setItem(\"expiration\", expirationDate.toISOString());\n    localStorage.setItem(\"userId\", userId);\n  }\n\n\n  private clearAuthData() {\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"expiration\");\n    localStorage.removeItem(\"userId\");\n\n    localStorage.removeItem(\"profile\");\n    localStorage.removeItem(\"uname\");\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { AuthService } from '../auth.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  isLoginMode = true;\n  isLoading = false;\n  error: any = null;\n  constructor(private authService: AuthService) { }\n\n  ngOnInit(): void {\n    this.error = null\n    this.authService.err.subscribe(err => {\n      this.error = err\n      this.isLoading = false\n    })\n  }\n\n  onSwitchMode() {\n    this.isLoginMode = !this.isLoginMode;\n  }\n\n  onSubmit(form: NgForm) {\n    this.isLoading = true;\n    if (!form.valid) {\n      return;\n    }\n    const email = form.value.email;\n    const password = form.value.password;\n\n    if (this.isLoginMode) {\n      this.authService.signIn(email, password)\n\n      form.reset()\n    }\n    else {\n      this.authService.createUser(email, password)\n\n      form.reset()\n    }\n  }\n\n}\n","\n<div class=\"container\">\n\n\n<div class=\"row\">\n    <div class=\"col-xs-12 col-md-6 col-md-offset-3\">\n        <div class=\"alert alert-danger\" *ngIf=\"error\">\n            <p>{{ error.status }} - {{error.error.message}}</p>\n        </div>\n        <div *ngIf=\"isLoading\" style=\"text-align: center;\" class=\"loading-text\">\n           <app-spinner></app-spinner>\n        </div>\n        <form #authForm=\"ngForm\" (ngSubmit)=\"onSubmit(authForm)\" *ngIf=\"!isLoading\">\n            <div class=\"form-group\">\n                <label for=\"email\">E-Mail</label>\n\n                <input type=\"email\" id=\"email\" class=\"form-control\" ngModel name=\"email\" required email />\n            </div>\n            <div class=\"form-group\">\n                <label for=\"password\">Password</label>\n                <input type=\"password\" id=\"password\" class=\"form-control\" ngModel name=\"password\" required minlength=\"6\" />\n            </div>\n\n            <div class=\"form-group\">\n                <button class=\"btn btn-primary\" type=\"submit\" [disabled]=\"!authForm.valid\">\n                    {{ isLoginMode ? 'Login' : 'Sign Up' }}\n                </button> |\n                <button class=\"btn btn-primary\" (click)=\"onSwitchMode()\" type=\"button\">\n                    Switch to {{ isLoginMode ? 'Sign Up' : 'Login' }}\n                </button>\n\n                <a [routerLink]=\"['/reset-password']\" class=\"btn btn-link\">Forget Password</a>\n\n            </div>\n\n            \n        </form>\n    </div>\n</div>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","\n\n\n<ul class=\"nav  mymenu\">\n    <li class=\"nav-item\">\n        <a href=\"https://github.com\" aria-label=\"Github\" class=\"nav-link text-github\"><i class=\"fa fa-github\"\n                style=\"font-size: 28px; color: black;\"></i></a>\n    </li>\n    <li class=\"nav-item\">\n        <a href=\"https://www.instagram.com\" aria-label=\"Instagram\" class=\"nav-link\"><i\n                class=\"fa fa-instagram\" style=\"font-size: 28px; color: black;\"></i></a>\n    </li>\n    <li class=\"nav-item\">\n        <a href=\"https://www.linkedin.com\" aria-label=\"LinkedIn\" class=\"nav-link\"><i\n                class=\"fa fa-linkedin\" style=\"font-size: 28px; color: black;\"></i></a>\n    </li>\n</ul>\n\n<h5  class=\"text-center copyright\"> A project by Anirban Biswas</h5>","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { AuthService } from '../auth/auth.service';\nimport { Profile } from '../profile/profile.model';\nimport { ProfileService } from '../services/profile.service';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit, OnDestroy {\n  userIsAuthenticated = false;\n  private authListenerSubs: Subscription;\n  profile: any;\n  username: string\n  profileisSet = false\n  constructor(private authService: AuthService, private profileService: ProfileService,\n    private route: ActivatedRoute) { }\n\n  ngOnInit(): void {\n\n\n    this.profileisSet = this.profileService.getIsProfileSet()\n    this.userIsAuthenticated = this.authService.getIsAuth();\n    if (this.userIsAuthenticated) {\n      this.getProfile()\n    }\n\n    this.authListenerSubs = this.authService\n      .getAuthStatusListener()\n      .subscribe(isAuthenticated => {\n        this.userIsAuthenticated = isAuthenticated;\n        if (this.userIsAuthenticated) {\n          this.getProfile()\n        }\n      });\n  }\n\n\n  onLogout() {\n    this.authService.logout();\n  }\n\n  getProfile() {\n    this.profileService.getProfileByCreatorId().subscribe(prof => {\n      this.profileisSet = true\n      this.username = prof.profile.username\n      this.profile = {\n        id: prof.profile._id,\n        username: prof.profile.username,\n        bio: prof.profile.bio,\n        imagePath: prof.profile.imagePath,\n        creator: prof.profile.creator\n      };\n    },\n      err => {\n        this.profileisSet = false\n        this.username = null\n      })\n\n  }\n\n\n  ngOnDestroy() {\n    this.authListenerSubs.unsubscribe();\n  }\n\n}\n","<div class=\"container\">\n  <nav class=\"navbar navbar-expand-lg navbar-light bg-light py-4\">\n    <a class=\"navbar-brand\" href=\"#\">Article Factory</a>\n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarTogglerDemo02\"\n      aria-controls=\"navbarTogglerDemo02\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n      <span class=\"navbar-toggler-icon\"></span>\n    </button>\n\n    <div class=\"collapse navbar-collapse\" id=\"navbarTogglerDemo02\">\n      <ul class=\"navbar-nav mr-auto mt-2 mt-lg-0\">\n        <li class=\"nav-item\" routerLinkActive=\"active\" [routerLinkActiveOptions]=\"{ exact: true }\">\n          <a class=\"nav-link\" routerLink=\"/\">Home</a>\n        </li>\n        <li class=\"nav-item\" routerLinkActive=\"active\" *ngIf=\"userIsAuthenticated\">\n          <a class=\"nav-link\" routerLink=\"/create\">Create</a>\n        </li>\n\n        <li class=\"nav-item\" routerLinkActive=\"active\" *ngIf=\"userIsAuthenticated && profileisSet\">\n          <a class=\"nav-link\" [routerLink]=\"['/profile',username]\">Profile</a>\n        </li>\n\n        <li class=\"nav-item\" routerLinkActive=\"active\" *ngIf=\"userIsAuthenticated && !profileisSet \">\n          <a class=\"nav-link\" [routerLink]=\"['/profile']\">Create Profile</a>\n        </li>\n\n        <li class=\"nav-item\" routerLinkActive=\"active\" *ngIf=\"userIsAuthenticated\">\n          <a class=\"nav-link\" routerLink=\"/myposts\">MyPosts</a>\n        </li>\n\n        <li class=\"nav-item\" routerLinkActive=\"active\" *ngIf=\"!userIsAuthenticated\">\n          <a class=\"nav-link\" routerLink=\"/login\">Auth</a>\n        </li>\n\n        <li class=\"nav-item\" routerLinkActive=\"active\" *ngIf=\"userIsAuthenticated\">\n          <a class=\"nav-link\" (click)=\"onLogout()\">Logout</a>\n        </li>\n      </ul>\n\n      <ul class=\"nav mymenu mt-5\">\n        <li class=\"nav-item\"><a href=\"https://github.com\" aria-label=\"Github\" class=\"nav-link text-github\"><i\n              class=\"fa fa-github\" style=\"font-size: 28px; color: rgb(25, 0, 85);\"></i></a></li>\n        <li class=\"nav-item\"><a href=\"https://www.youtube.com\" aria-label=\"Youtube\"\n            class=\"nav-link\"><i class=\"fa fa-youtube\" style=\"font-size: 28px; color: rgb(235, 23, 23);\"></i></a></li>\n        <li class=\"nav-item\"><a href=\"https://www.linkedin.com\" aria-label=\"LinkedIn\"\n            class=\"nav-link\"><i class=\"fa fa-linkedin\" style=\"font-size: 28px; color: rgb(27, 13, 223);\"></i></a></li>\n      </ul>\n    </div>\n  </nav>\n\n  <ul class=\"social\">\n    <li><a href=\"https://facebook.com/\"><i class=\"fa fa-facebook\"></i></a></li>\n    <li><a href=\"https://www.instagram.com\"><i class=\"fa fa-instagram\"></i></a></li>\n    <li><a href=\"https://www.twitter.com\"><i class=\"fa fa-twitter\"></i></a></li>\n  </ul>\n</div>\n\n\n<div class=\"footer-icons hidden-xs hidden-sm sideicons d-none d-md-block\">\n  <ul class=\"navbar-nav\">\n    <li class=\"nav-item inline-block\"><a href=\"https://facebook.com\" aria-label=\"Facebook\"\n        class=\"nav-link text-github\"><i class=\"fa fa-facebook\" style=\"font-size: 24px; color: rgb(0, 78, 223);\"></i></a></li>\n    <li class=\"nav-item inline-block\"><a href=\"https://www.instagram.com\" aria-label=\"Instagram\"\n        class=\"nav-link\"><i class=\"fa fa-instagram\" style=\"font-size: 24px; color: rgb(172, 0, 143);\"></i></a></li>\n    <li class=\"nav-item inline-block\"><a href=\"https://www.twitter.com\"\n        aria-label=\"Twitter\" class=\"nav-link\"><i class=\"fa fa-twitter\" style=\"font-size: 24px; color: rgb(0, 204, 255);\"></i></a>\n    </li>\n  </ul>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { Post } from '../post.model';\nimport { ActivatedRoute, ParamMap, Router } from '@angular/router';\nimport { mimeType } from './mime-type.validator';\nimport { PostService } from '../../services/post.service';\nimport { ProfileService } from 'src/app/services/profile.service';\n\n\n@Component({\n  selector: 'app-create-post',\n  templateUrl: './create-post.component.html',\n  styleUrls: ['./create-post.component.css']\n})\nexport class CreatePostComponent implements OnInit {\n\n  postdate: Date\n  fetchedDate: Date\n  form: FormGroup;\n  isLoading: boolean = false\n  imagePreview: string\n  post: Post;\n  private mode = \"create\";\n  private postId: string;\n  constructor(\n    private ps: PostService,\n    public route: ActivatedRoute,\n    public profileService:ProfileService  ,\n    private router: Router,) { }\n\n  ngOnInit(): void {\n    this.checkProfileCreated()\n    this.route.paramMap.subscribe((paramMap: ParamMap) => {\n      if (paramMap.has(\"postId\")) {\n        this.mode = \"edit\";\n        this.postId = paramMap.get(\"postId\");\n        this.getPostById(this.postId)\n      }\n      else {\n        this.mode = \"create\";\n        this.postId = null;\n\n      }\n    })\n    this.createForm()\n  }\n\n  getPostById(id) {\n    this.isLoading=true\n    this.ps.getPost(id).subscribe(postData => {\n    \n      this.post = {\n        id: postData._id,\n        title: postData.title,\n        content: postData.content,\n        imagePath: postData.imagePath,\n        creator: postData.creator\n      };\n      this.imagePreview = postData.imagePath\n      this.form.setValue({\n        title: this.post.title,\n        content: this.post.content,\n        image: this.post.imagePath\n      });\n      this.isLoading = false;\n    });\n\n  }\n\n  createForm() {\n    this.form = new FormGroup({\n      title: new FormControl(null, {\n        validators: [Validators.required, Validators.minLength(3)]\n      }),\n      content: new FormControl(null, { validators: [Validators.required] }),\n      image: new FormControl(null, {\n        validators: [Validators.required],\n        asyncValidators: [mimeType]\n      })\n    });\n  }\n\n  onImagePicked(event: Event) {\n    const file = (event.target as HTMLInputElement).files[0];\n    this.form.patchValue({ image: file });\n    this.form.get(\"image\").updateValueAndValidity();\n    const reader = new FileReader();\n    reader.onload = () => {\n      this.imagePreview = reader.result as string;\n    };\n    reader.readAsDataURL(file);\n  }\n\n  onSavePost() {\n    this.postdate = new Date()\n    if (this.form.invalid) {\n      return;\n    }\n    this.isLoading = true;\n    if (this.mode === \"create\") {\n      this.ps.addPost(\n        this.form.value.title,\n        this.form.value.content,\n        this.form.value.image,\n        this.postdate\n      );\n    }\n    else {\n      this.ps.updatePost(\n        this.postId,\n        this.form.value.title,\n        this.form.value.content,\n        this.form.value.image\n      );\n    }\n    this.form.reset();\n  }\n\n  checkProfileCreated(){\n    this.profileService.getProfileByCreatorId().subscribe(profile => {\n      if(!profile){\n        this.router.navigate([\"/profile\"])\n      }\n    },e=>{\n      this.router.navigate([\"/profile\"])\n    })\n  }\n}\n\n\n","<hr>\n<div class=\"container\">\n  <div *ngIf=\"isLoading\" style=\"text-align: center;\" class=\"loading-text\">\n    <app-spinner></app-spinner>\n </div>\n  <form [formGroup]=\"form\" (submit)=\"onSavePost()\">\n    <div class=\"form-group\">\n      <input\n        type=\"text\"\n        formControlName=\"title\"\n        class=\"form-control\"\n        placeholder=\"Post Title\"\n      />\n      <span\n        class=\"text-danger\"\n        *ngIf=\"form.get('title').invalid && form.get('title').touched\"\n        >Please enter a post title.</span\n      >\n    </div>\n    <div class=\"form-group\">\n      <button\n        type=\"button\"\n        class=\"btn btn-outline-success\"\n        (click)=\"filePicker.click()\"\n      >\n        Pick Image\n      </button>\n      <input\n        type=\"file\"\n        class=\"form-control\"\n        #filePicker\n        (change)=\"onImagePicked($event)\"\n      />\n\n      <div\n        class=\"image-preview\"\n        *ngIf=\"imagePreview !== '' && imagePreview && form.get('image').valid\"\n      >\n        <img [src]=\"imagePreview\" [alt]=\"form.value.title\" />\n      </div>\n      <span\n        class=\"text-danger\"\n        *ngIf=\"form.get('image').invalid && form.dirty && form.touched\"\n        >Please Choose a valid image.</span\n      >\n    </div>\n    <div class=\"form-group\">\n      <textarea\n        class=\"form-control\"\n        rows=\"4\"\n        formControlName=\"content\"\n        placeholder=\"Post Content\"\n      ></textarea>\n      <span\n        class=\"text-danger\"\n        *ngIf=\"form.get('content').invalid && form.get('content').touched\"\n        >Please enter a post title.</span\n      >\n    </div>\n    <button class=\"btn btn-primary\" [disabled]=\"form.invalid\" type=\"submit\">\n      Save Post\n    </button>\n  </form>\n</div>\n","import { AbstractControl } from \"@angular/forms\";\nimport { Observable, Observer, of } from \"rxjs\";\n\nexport const mimeType = (\n  control: AbstractControl\n): Promise<{ [key: string]: any }> | Observable<{ [key: string]: any }> => {\n  if (typeof(control.value) === 'string') {\n    return of(null);\n  }\n  const file = control.value as File;\n  const fileReader = new FileReader();\n  const frObs = Observable.create(\n    (observer: Observer<{ [key: string]: any }>) => {\n      fileReader.addEventListener(\"loadend\", () => {\n        const arr = new Uint8Array(fileReader.result as ArrayBuffer).subarray(0, 4);\n        let header = \"\";\n        let isValid = false;\n        for (let i = 0; i < arr.length; i++) {\n          header += arr[i].toString(16);\n        }\n        switch (header) {\n          case \"89504e47\":\n            isValid = true;\n            break;\n          case \"ffd8ffe0\":\n          case \"ffd8ffe1\":\n          case \"ffd8ffe2\":\n          case \"ffd8ffe3\":\n          case \"ffd8ffe8\":\n            isValid = true;\n            break;\n          default:\n            isValid = false; // Or you can use the blob.type as fallback\n            break;\n        }\n        if (isValid) {\n          observer.next(null);\n        } else {\n          observer.next({ invalidMimeType: true });\n        }\n        observer.complete();\n      });\n      fileReader.readAsArrayBuffer(file);\n    }\n  );\n  return frObs;\n};\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { PostService } from '../../services/post.service';\nimport { Subscription } from 'rxjs';\nimport { Post } from '../post.model';\nimport { AuthService } from '../../auth/auth.service';\nimport { ProfileService } from '../../services/profile.service';\nimport { Profile } from '../../profile/profile.model';\n\n@Component({\n  selector: 'app-myposts',\n  templateUrl: './myposts.component.html',\n  styleUrls: ['./myposts.component.css']\n})\nexport class MypostsComponent implements OnInit, OnDestroy {\n  posts: Post[] = [];\n  postbyUser: Profile[] = []\n  isloading = false;\n  error: any\n  userId: string\n  private postsSub: Subscription;\n  constructor(private ps: PostService, private authService: AuthService,\n    private profileService: ProfileService) { }\n\n  ngOnInit(): void {\n    this.getErrors()\n    this.isloading = true\n    this.getMyPost()\n    this.postsSub = this.ps.getPostUpdateListener()\n      .subscribe((posts: Post[]) => {\n\n        this.getPostUserbyCreatorId(posts)\n        this.isloading = false;\n        this.posts = posts;\n      }, e => {\n        this.isloading = false;\n        this.error = e\n      });\n  }\n\n  getPostUserbyCreatorId(post: Post[]) {\n    let creatorId = []\n    for (let i in post) {\n      creatorId.push(post[i].creator)\n\n    }\n\n    let unique = [...new Set(creatorId)];\n    for (let i in unique) {\n      this.profileService.getPostUserByCreatorId(unique[i])\n        .subscribe(user => {\n          this.postbyUser.push(user.profile)\n        })\n    }\n\n  }\n\n\n\n  getErrors() {\n    this.error = null\n    this.ps.err.subscribe(err => {\n      this.error = err\n      this.isloading = false\n    })\n  }\n\n  getMyPost() {\n    this.ps.getMyPost(this.userId)\n  }\n\n  ngOnDestroy() {\n    this.postsSub.unsubscribe();\n  }\n}","<div class=\"site-section bg-light\">\n  <div class=\"container\">\n    <div class=\"row mb-5\">\n      <div class=\"col-md-12 text-center\">\n        <h2 class=\"font-weight-bold text-black\">My Posts</h2>\n      </div>\n    </div>\n\n    <div class=\"row\">\n      <div class=\"alert alert-danger\" *ngIf=\"error && error.error.message\" >\n        <p>{{ error.status }} - {{error.error.message}}</p>\n    </div>\n\n    <div class=\"alert alert-danger\" *ngIf=\"error && !error.error.message\" >\n      <p>{{ error.status }} - {{error.statusText}}</p>\n  </div>\n    <div *ngIf=\"isloading\" style=\"text-align: center;\" class=\"loading-text\">\n       <app-spinner></app-spinner>\n    </div>\n    <ng-container *ngIf=\"posts.length>0\">\n\n    \n      <div class=\"col-md-6\" *ngFor = \"let post of posts\">\n        <div class=\"d-block podcast-entry bg-white mb-5 aos-init aos-animate\" data-aos = \"fade-up\">\n          <div class=\"image w-100\"  [style.backgroundImage]=\"'url('+ post.imagePath +') ' \"></div>\n          <div class=\"text w-100\">\n            <h3 class=\"\">\n              <a [routerLink]=\"[post.id]\">{{post.title}}</a>\n            </h3>\n\n            <div class=\"text-white mb-3\">\n              <span class=\"text-black-opacity-05\" *ngFor=\"let  user of postbyUser\">\n                <small *ngIf=\"user.creator === post.creator\">\n                  <a [routerLink]=\"['../public', user.username]\">by {{user.username}}</a>\n                  <span class=\"sep\"> /\n                  </span>{{post.postDate | date:'short'}}</small>\n              </span>\n            </div>\n            <p class=\"mb-4\">{{post.content}} </p>\n          </div>\n        </div>\n\n      </div>\n    </ng-container>\n\n    <div *ngIf=\"posts.length==0 && !isloading\" style=\"text-align: center;\" class=\"loading-text\">\n      <h2>No Posts Found</h2>\n   </div>\n    </div>\n  </div>\n</div>\n\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { ActivatedRoute, ParamMap, Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { ProfileService } from 'src/app/services/profile.service';\n\nimport { AuthService } from '../../auth/auth.service';\nimport { PostService } from '../../services/post.service';\nimport { Post } from '../post.model';\n\n@Component({\n  selector: 'app-post-detail',\n  templateUrl: './post-detail.component.html',\n  styleUrls: ['./post-detail.component.css']\n})\nexport class PostDetailComponent implements OnInit, OnDestroy {\n  isAuth\n  isloading = false;\n  url: string\n  error: any\n  postId: string;\n  post: Post;\n  userId: String;\n  userIsAuthenticated: boolean\n  private authStatusSub: Subscription;\n  profile: any\n\n  constructor(\n    public postsService: PostService,\n    public route: ActivatedRoute,\n    public router: Router,\n    private authService: AuthService,\n    public profileService:ProfileService\n  ) { }\n\n  ngOnInit(): void {\n    this.url = this.router.url.split(\"/\")[1]\n    \n    this.authData()\n    this.getErrors()\n\n    this.route.paramMap.subscribe((paramMap: ParamMap) => {\n\n      if (paramMap.has(\"postId\")) {\n        this.postId = paramMap.get(\"postId\");\n        this.getPostById(this.postId)\n      }\n    })\n  }\n\n  authData() {\n    this.isAuth = this.authService.getIsAuth()\n    this.userId = this.authService.getUserId();\n    this.authStatusSub = this.authService\n      .getAuthStatusListener()\n      .subscribe(isAuthenticated => {\n        this.userIsAuthenticated = isAuthenticated;\n        this.userId = this.authService.getUserId();\n      });\n  }\n  getErrors() {\n    this.error = null\n    this.postsService.err.subscribe(err => {\n      this.error = err\n      this.isloading = false\n\n    })\n\n  }\n\n  getPostById(id) {\n    this.isloading = true\n    this.postsService.getPost(this.postId).subscribe(postData => {\n      console.log(postData)\n      this.post = {\n        id: postData._id,\n        title: postData.title,\n        content: postData.content,\n        imagePath: postData.imagePath,\n        creator: postData.creator,\n        postDate:postData.postDate\n      };\n      this.getPostUserByCreatorId(postData.creator) \n\n      // this.compareIds(this.userId,this.post.creator)\n      this.isloading = false\n    })\n    e => {\n      this.isloading = false\n      this.error = e\n    }\n  }\n\n\n\n  OnDelete(postId: string) {\n    this.postsService.deletePost(postId);\n  }\n\n\n  getPostUserByCreatorId(id) {\n    this.profileService.getPostUserByCreatorId(id).subscribe(profile => {\n      if (profile.profile) {\n        this.profile= profile.profile\n      }else{\n      }\n    },e=>{\n      this.isloading = false\n    })\n\n  }\n  ngOnDestroy() {\n\n    this.authStatusSub.unsubscribe();\n  }\n}\n","  <div class=\"container\">\n    <div class=\"alert alert-danger\" *ngIf=\"error\">\n      <p>{{ error.status }} - {{error.error.message}}</p>\n  </div>\n  <div *ngIf=\"isloading\" style=\"text-align: center;\" class=\"loading-text\">\n    <app-spinner></app-spinner>\n  </div>\n    <div class=\"row\">\n\n      \n\n      <div class=\"col-md-3 col-xs-12\" *ngIf=\"isAuth && url =='myposts' \">\n        <div class=\"list-group\">\n          <a [routerLink]=\"['../edit',postId]\" class=\"list-group-item list-group-item-action\">\n            Edit Post\n          </a>\n          <a data-toggle=\"modal\" data-target=\"#exampleModal\" class=\"list-group-item list-group-item-action\">Delete Post</a>\n\n        </div>\n\n\n        <!-- Modal -->\n        <div class=\"modal fade\" id=\"exampleModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\"\n          aria-hidden=\"true\">\n          <div class=\"modal-dialog\" role=\"document\">\n            <div class=\"modal-content\">\n              <div class=\"modal-header\">\n                <h5 class=\"modal-title\" id=\"exampleModalLabel\">Delete Confirmation Box</h5>\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                  <span aria-hidden=\"true\">&times;</span>\n                </button>\n              </div>\n              <div class=\"modal-body\">\n                Please click on Ok button to Delete the post permanently\n              </div>\n              <div class=\"modal-footer\">\n                <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Cancel</button>\n                <button type=\"button\" class=\"btn btn-primary\" data-dismiss=\"modal\" (click)=\"OnDelete(postId)\">Confirm</button>\n              </div>\n            </div>\n          </div>\n        </div>\n\n\n      </div>\n\n      <div class=\"col-md-9 main\" *ngIf=\"post\">\n        <div class=\"card-body\">\n          <h1>{{post.title}}</h1>\n          <div class=\"text-white mb-3\">\n            <span class=\"text-black-opacity-05\" >\n              <small *ngIf=\"profile\">\n                <a [routerLink]=\"['../public', profile.username]\">by {{profile.username}}</a>\n                \n                <span class=\"sep\"> /\n                </span>{{post.postDate | date:'short'}}</small>\n            </span>\n          </div>\n\n          <div class=\"img\">\n            <img src={{post.imagePath}} alt=\"\" class=\"img-responsive center\">\n          </div>\n          <hr>\n\n          <p>{{post.content}}</p>\n        </div>\n\n      </div>\n    </div>\n\n  </div>","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { PostService } from '../../services/post.service';\nimport { Subscription } from 'rxjs';\nimport { Post } from '../post.model';\nimport { AuthService } from '../../auth/auth.service';\nimport { ProfileService } from '../../services/profile.service';\nimport { Profile } from '../../profile/profile.model';\n\n@Component({\n  selector: 'app-post-list',\n  templateUrl: './post-list.component.html',\n  styleUrls: ['./post-list.component.css']\n})\nexport class PostListComponent implements OnInit, OnDestroy {\n  userIsAuthenticated = false;\n  private authListenerSubs: Subscription;\n\n  posts: Post[] = [];\n  user: Profile[] = []\n  postbyUser: Profile[] = []\n  isloading = false;\n  error: any\n  userId: string\n  private postsSub: Subscription;\n  constructor(private ps: PostService,\n    private authService: AuthService,\n    private profileService: ProfileService) { }\n\n  ngOnInit(): void {\n    this.checkAuth()\n    this.getErrors()\n    this.getUsers()\n    this.isloading = true\n    this.userId = this.authService.getUserId();\n    this.ps.getPosts()\n\n    this.postsSub = this.ps.getPostUpdateListener()\n      .subscribe((posts: Post[]) => {\n\n\n        this.isloading = false;\n        this.posts = posts;\n        this.sortPostByDate(posts)\n        this.getPostUserbyCreatorId(this.posts)\n        console.log(\"posts is\", this.posts)\n      }, e => {\n        this.isloading = false;\n        this.error = e\n      });\n  }\n\n  sortPostByDate(post){\n    post.sort((a, b) => new Date(b.postDate).getTime() - new Date(a.postDate).getTime());\n\n  }\n  getErrors() {\n    this.error = null\n    this.ps.err.subscribe(err => {\n      this.error = err\n      this.isloading = false\n    })\n  }\n\n  checkAuth() {\n    this.userIsAuthenticated = this.authService.getIsAuth();\n\n    this.authListenerSubs = this.authService\n      .getAuthStatusListener()\n      .subscribe(isAuthenticated => {\n        \n        this.userIsAuthenticated = isAuthenticated;\n        this.getUserProfile()\n      });\n  }\n\n  getUserProfile(){\n\n  }\n\n  getUsers() {\n    this.profileService.getAllUsers().subscribe(user => {\n      this.user = user.profile\n    })\n  }\n\n  getPostUserbyCreatorId(post: Post[]) {\n    let creatorId = []\n    for (let i in post) {\n      creatorId.push(post[i].creator)\n\n    }\n\n    let unique = [...new Set(creatorId)];\n    for (let i in unique) {\n      this.profileService.getPostUserByCreatorId(unique[i])\n        .subscribe(user => {\n          this.postbyUser.push(user.profile)\n\n        })\n    }\n\n  }\n\n\n  ngOnDestroy() {\n    this.postsSub.unsubscribe();\n    this.authListenerSubs.unsubscribe();\n  }\n\n}\n\n\n\n","<div class=\"container hero\" *ngIf = \"!userIsAuthenticated\">\n  <div class=\"row align-items-center text-center text-md-left\">\n    <div class=\"col-lg-4\">\n      <h1 class=\"mb-3 display-3\">Share Your Story to the World</h1>\n      <p>Join with us! Register or Login. Write your story now!!</p>\n    </div>\n\n    <div class=\"col-lg-8\">\n      <img src=\"assets/main.jpg\" alt=\"Image\" class=\"img-fluid\">\n    </div>\n  </div>\n</div>\n\n<hr>\n<div class=\"site-section\">\n  <div class=\"container\">\n    <div class=\"row\">\n      <div *ngIf=\"isloading\" style=\"text-align: center;\" class=\"loading-text\">\n        <app-spinner></app-spinner>\n     </div>\n      <div class=\"col-lg-8\">\n        <div class=\"d-block d-md-flex podcast-entry bg-white mb-5 aos-init aos-animate\"\n          *ngFor=\"let post of posts;let i=index\" data-aos=\"fade-up\">\n          <div class=\"image\" [style.backgroundImage]=\"'url('+ post.imagePath +') ' \"></div>\n          <div class=\"text\">\n            <h3 class=\"font-weight-dark\">\n              <a [routerLink]=\"[post.id]\"> {{ post.title }}</a>\n            </h3>\n            <div class=\"text-white mb-3\">\n              <span class=\"text-black-opacity-05\" *ngFor=\"let  user of postbyUser\">\n                <small *ngIf=\"user.creator === post.creator\">\n                  <a [routerLink]=\"['public', user.username]\">by {{user.username}}</a><span class=\"sep\"> /\n                  </span>{{post.postDate | date:'short'}}</small>\n              </span>\n            </div>\n\n            <div class=\"desc\">\n              <p>{{post.content |slice:0: 170 }}\n                <a [routerLink]=\"[post.id]\">{{post.content.length > 170 ? '...Read More' : ''}}</a></p>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"col-lg-4\">\n        <div class=\"featured-user  mb-5 mb-lg-0\">\n          <h3 class=\"mb-4\">Our Writters</h3>\n          <ul class=\"list-unstyled\">\n            <li *ngFor=\"let usr of user\">\n              <a [routerLink]=\"['public',usr.username]\" class=\"d-flex align-items-center\">\n                <img src={{usr.imagePath}} class=\"img-fluid mr-2\">\n                <div class=\"podcaster\">\n                  <span class=\"d-block\">{{usr.username}}</span>\n                  <span class=\"small\">{{usr.bio |slice:0: 70}}</span>\n                </div>\n              </a>\n            </li>\n\n\n          </ul>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, ParamMap, Router } from '@angular/router';\nimport { mimeType } from '../../posts/create-post/mime-type.validator';\nimport { ProfileService } from '../../services/profile.service';\nimport { Profile } from '../profile.model';\n\n@Component({\n  selector: 'app-create-profile',\n  templateUrl: './create-profile.component.html',\n  styleUrls: ['./create-profile.component.css']\n})\nexport class CreateProfileComponent implements OnInit {\n  form: FormGroup;\n  isLoading: boolean = true\n  imagePreview: string\n  post: any;\n  uname: string\n  error: string\n  private mode = \"create\";\n  private profileId: string;\n  constructor(private profileService: ProfileService\n    , private router: Router,\n    public route: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    this.route.paramMap.subscribe((paramMap: ParamMap) => {\n      if (paramMap.has(\"profileId\")) {\n        this.mode = \"edit\";\n        this.uname = paramMap.get(\"profileId\");\n        this.getProfileById(this.uname)\n      }\n      else {\n        this.mode = \"create\";\n        this.uname = null;\n\n      }\n    })\n    this.createForm()\n    this.checkProfileExist()\n  }\n\n  getProfileById(id) {\n    this.isLoading = true\n    this.profileService.getProfileByUsername(id).subscribe(profile => {\n      this.isLoading = false\n      this.post = {\n        id: profile.profile._id,\n        username: profile.profile.username,\n        bio: profile.profile.bio,\n        imagePath: profile.profile.imagePath,\n        creator: profile.profile.creator\n      };\n      this.profileId = profile.profile._id\n      this.imagePreview = profile.profile.imagePath\n      this.form.setValue({\n        username: this.post.username,\n        bio: this.post.bio,\n        image: this.post.imagePath\n      });\n\n    })\n  }\n\n  checkProfileExist() {\n    this.isLoading = true\n    this.profileService.getProfileByCreatorId().subscribe(profile => {\n      console.log(profile)\n      if (profile) {\n        let uname = profile.profile.username\n        if (this.mode == \"create\")\n          this.router.navigate(['/profile', uname])\n      }else{\n        this.isLoading = false\n      }\n    },e=>{\n      this.isLoading = false\n    })\n\n  }\n  createForm() {\n    this.form = new FormGroup({\n      username: new FormControl(null, {\n        validators: [Validators.required, Validators.minLength(3)]\n      }),\n      bio: new FormControl(null, { validators: [Validators.required] }),\n      image: new FormControl(null, {\n        validators: [Validators.required],\n        asyncValidators: [mimeType]\n      })\n    });\n  }\n\n  onImagePicked(event: Event) {\n    const file = (event.target as HTMLInputElement).files[0];\n    this.form.patchValue({ image: file });\n    this.form.get(\"image\").updateValueAndValidity();\n    const reader = new FileReader();\n    reader.onload = () => {\n      this.imagePreview = reader.result as string;\n    };\n    reader.readAsDataURL(file);\n  }\n\n  onSavePost() {\n    if (this.form.invalid) {\n      return;\n    }\n    this.isLoading = true;\n\n    if (this.mode === \"create\") {\n      this.profileService.addProfile(\n        this.form.value.username,\n        this.form.value.bio,\n        this.form.value.image\n      );\n    }\n    else {\n      this.profileService.updateProfile(\n        this.profileId,\n        this.form.value.username,\n        this.form.value.bio,\n        this.form.value.image\n      );\n    }\n    this.form.reset();\n  }\n\n\n  clearError() {\n    this.error = ''\n  }\n\n  checkUsername(uname) {\n    this.profileService.getProfileByUsername(uname).subscribe(profile => {\n      if (profile && uname !== this.uname) {\n        this.error = \"Username is already taken!\"\n      }\n\n    })\n  }\n}\n","<div class=\"container\">\n  <div *ngIf=\"isLoading\" style=\"text-align: center;\" class=\"loading-text\">\n    <app-spinner></app-spinner>\n </div>\n    <form [formGroup]=\"form\" (submit)=\"onSavePost()\">\n      <div class=\"form-group\">\n        <input\n          type=\"text\"\n          formControlName=\"username\"\n          class=\"form-control\"\n          placeholder=\"Username\"\n          (focus)=\"clearError()\" (blur)=\"checkUsername($event.target.value)\"\n        />\n        <ng-container *ngIf=\"error\">\n          <span class=\"text-danger\" *ngIf=\"form.get('username')\n           && (form.get('username').dirty || form.get('username').touched)\">\n              {{error}}</span>\n      </ng-container>\n        <span\n          class=\"text-danger\"\n          *ngIf=\"form.get('username').invalid && form.get('username').touched\"\n          >Please enter a post title.</span\n        >\n      </div>\n      <div class=\"form-group\">\n        <button\n          type=\"button\"\n          class=\"btn btn-outline-success\"\n          (click)=\"filePicker.click()\"\n        >\n          Pick Image\n        </button>\n        <input\n          type=\"file\"\n          class=\"form-control\"\n          #filePicker\n          (change)=\"onImagePicked($event)\"\n        />\n  \n        <div\n          class=\"image-preview\"\n          *ngIf=\"imagePreview !== '' && imagePreview && form.get('image').valid\"\n        >\n          <img [src]=\"imagePreview\" [alt]=\"form.value.title\" />\n        </div>\n        <span\n          class=\"text-danger\"\n          *ngIf=\"form.get('image').invalid && form.dirty && form.touched\"\n          >Please Choose a valid image.</span\n        >\n      </div>\n      <div class=\"form-group\">\n        <textarea\n          class=\"form-control\"\n          rows=\"4\"\n          formControlName=\"bio\"\n          placeholder=\"Your short Bio\"\n        ></textarea>\n        <span\n          class=\"text-danger\"\n          *ngIf=\"form.get('bio').invalid && form.get('bio').touched\"\n          >Please enter a Bio</span\n        >\n      </div>\n      <button class=\"btn btn-primary\" [disabled]=\"form.invalid || error\" type=\"submit\">\n        Save Profile\n      </button>\n    </form>\n  </div>\n  ","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, ParamMap, Router } from '@angular/router';\nimport { map } from 'rxjs/operators';\nimport { AuthService } from '../../auth/auth.service';\nimport { Post } from '../../posts/post.model';\nimport { ProfileService } from '../../services/profile.service';\nimport { Profile } from '../profile.model';\n\n@Component({\n  selector: 'app-view-profile',\n  templateUrl: './view-profile.component.html',\n  styleUrls: ['./view-profile.component.css']\n})\nexport class ViewProfileComponent implements OnInit {\n  profileId: string\n  isloading: boolean = false\n  profile: Profile\n  posts: Post[] = []\n  url\n  userId: string\n  constructor(private profileService: ProfileService,\n    private authService: AuthService,\n    public route: ActivatedRoute,\n    public router: Router,) { }\n\n  ngOnInit(): void {\n    this.userId = this.authService.getUserId()\n\n    this.url = this.router.url.split(\"/\")[1]\n\n    this.route.paramMap.subscribe((paramMap: ParamMap) => {\n      if (paramMap.has(\"profileId\")) {\n        this.profileId = paramMap.get(\"profileId\");\n        this.getProfileByUsername(this.profileId)\n        this.getCurrentUseersPost(this.profileId)\n      }\n      else{\n        this.router.navigate[(\"/\")]\n      }\n    })\n  }\n\n  getProfileByUsername(uname) {\n    this.isloading = true\n    this.profileService.getProfileByUsername(uname)\n      .subscribe(profile => {\n        this.profile = profile.profile\n        this.isloading = false\n      })\n  }\n\n  getCurrentUseersPost(uname) {\n    this.isloading = true\n    this.profileService.getMyPost(uname).pipe(\n      map(postData => {\n        return postData.post.map(post => {\n          return {\n            title: post.title,\n            content: post.content,\n            id: post._id,\n            imagePath: post.imagePath,\n            creator: post.creator,\n            postDate: post.postDate\n          };\n        });\n      })\n    ).subscribe(data => {\n      this.isloading = false\n      this.posts = data\n    })\n  }\n\n}\n","<hr>\n<div class=\"container py-5\">\n    <div *ngIf=\"isloading\" style=\"text-align: center;\" class=\"loading-text\">\n        <app-spinner></app-spinner>\n     </div>\n    <div class=\"row profile\" *ngIf = \"profile\">\n        <div  class=\"col-md-8 col-xs-12  order-2 order-lg-1\">\n            <h2 class=\"text-black font-weight-light mb-4\">{{profile.username}}</h2>\n            <a *ngIf=\"userId===profile.creator && url =='profile'\" [routerLink]=\"['../edit',profileId]\">Edit Profile</a>\n            <p>{{profile.bio}}</p>\n        </div>\n        <div class=\"col-md-4 col-xs-12 order-1 order-lg-2\" >\n            <img src={{profile.imagePath}} class=\"img-fluid w-50 rounded-circle mb-3\">        \n        </div>\n    </div>\n</div>\n\n\n<div class=\"container py-5\">\n    <h2  *ngIf = \"profile\" class=\"font-weight-light text-black\">{{profile.username}}'s Posts</h2>\n    <hr>\n    <div class=\"row\">\n       \n    <div *ngIf=\"isloading\" style=\"text-align: center;\" class=\"loading-text\">\n        <app-spinner></app-spinner>\n     </div>\n  \n     <div class=\"col-lg-12\">\n       <ng-container *ngIf=\"posts.length>0\">\n        <div class=\"d-block d-md-flex podcast-entry bg-white mb-5 aos-init aos-animate\"\n        *ngFor=\"let post of posts\" data-aos=\"fade-up\">\n        <div class=\"image\" [style.backgroundImage]=\"'url('+ post.imagePath +') ' \"></div>\n      <div class=\"text\">\n        <h3 class=\"font-weight-light\">\n          <a *ngIf=\"userId===post.creator\"  [routerLink]=\"['../../myposts',post.id]\"> {{ post.title }}</a>\n          <a *ngIf=\"userId!==post.creator\"  [routerLink]=\"['posts',post.id]\"> {{ post.title }}</a>\n        </h3>\n        <div class=\"text-white mb-3\">\n          <span class=\"text-black-opacity-05\">\n            <small>By Mike Smith <span class=\"sep\">/</span>{{post.postDate | date:'short'}}</small>\n          </span>\n        </div>\n\n        <div class=\"desc\">\n          <p>{{post.content |slice:0: 170 }}{{post.content.length > 170 ? ' ...Read More' : ''}}</p>\n        </div>\n      </div>\n      </div>\n    </ng-container>\n    <div *ngIf=\"posts.length==0 && !isloading\" style=\"text-align: center;\" class=\"loading-text\">\n      <h2 class=\"nopost\">No Posts written by this user</h2>\n   </div>\n      </div>\n</div>\n</div>\n\n","import { Injectable } from '@angular/core';\nimport { Post } from '../posts/post.model';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { BehaviorSubject, Subject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport {environment} from '../../environments/environment'\nconst BACKEND_URL = environment.apiUrl + \"/posts\"\n@Injectable({\n  providedIn: 'root'\n})\nexport class PostService {\n  private posts: Post[] = [];\n \n  private postsUpdated = new Subject<Post[]>();\n  public err = new BehaviorSubject<any>(null);\n  constructor(\n    private http: HttpClient, private router: Router\n  ) { }\n\n  getPostUpdateListener() {\n    return this.postsUpdated.asObservable();\n  }\n\n  addPost(title: string, content: string, imgpath: File, postDate: Date) {\n    const postData = new FormData();\n    postData.append(\"title\", title);\n    postData.append(\"content\", content);\n    postData.append(\"image\", imgpath, title);\n    postData.append(\"postDate\", postDate.toString());\n    this.http\n      .post<{ message: string; post: Post }>(\n        BACKEND_URL,\n        postData\n      )\n      .subscribe(responseData => {\n        this.err.next(null)\n        this.router.navigate([\"/\"]);\n\n\n      }),\n      err => {\n        this.err.next(err)\n      }\n  }\n\n  getPosts() {\n    this.http.get<{ message: string; posts: any }>(BACKEND_URL)\n      .pipe(\n        map(postData => {\n          return postData.posts.map(post => {\n            return {\n              title: post.title,\n              content: post.content,\n              id: post._id,\n              imagePath: post.imagePath,\n              creator: post.creator,\n              postDate: post.postDate\n            };\n          });\n        })\n      )\n      .subscribe(transformedPosts => {\n        this.err.next(null)\n\n        this.posts = transformedPosts;\n        this.postsUpdated.next([...this.posts]);\n      },\n        err => {\n          this.err.next(err)\n        });\n  }\n\n  getPost(id: string) {\n    return this.http.get<{\n      _id: string, title: string, content: string, imagePath: string,\n      creator: string,postDate:Date;\n    }>(\n      BACKEND_URL +\"/\" + id\n    );\n  }\n\n  getMyPost(id: string) {\n    this.http.get<{ message: string; posts: any }>(\n      BACKEND_URL + \"/mypost\"\n    ).pipe(\n      map(postData => {\n        return postData.posts.map(post => {\n          return {\n            title: post.title,\n            content: post.content,\n            id: post._id,\n            imagePath: post.imagePath,\n            creator: post.creator,\n            postDate: post.postDate\n          };\n        });\n      })\n    )\n      .subscribe(transformedPosts => {\n        this.err.next(null)\n\n        this.posts = transformedPosts;\n        this.postsUpdated.next([...this.posts]);\n      },\n        err => {\n          this.err.next(err)\n        });\n  }\n\n\n  updatePost(id: string, title: string, content: string, image: File | string) {\n    let postData: Post | FormData;\n    if (typeof image === \"object\") {\n      postData = new FormData();\n      postData.append(\"id\", id);\n      postData.append(\"title\", title);\n      postData.append(\"content\", content);\n      postData.append(\"image\", image, title);\n    } else {\n      postData = {\n        id: id,\n        title: title,\n        content: content,\n        imagePath: image,\n        creator: null\n      };\n    }\n    this.http\n      .put(BACKEND_URL + \"/\" +id, postData)\n      .subscribe(response => {\n        this.err.next(null)\n        this.router.navigate([\"/myposts\"]);\n      },\n        err => {\n          this.err.next(err)\n        });\n  }\n\n  deletePost(postId: string) {\n    this.http\n      .delete(BACKEND_URL +\"/\"+ postId)\n      .subscribe((data) => {\n\n        this.err.next(null)\n        const updatedPosts = this.posts.filter(post => post.id !== postId);\n        this.posts = updatedPosts;\n        this.postsUpdated.next([...this.posts]);\n        this.router.navigate([\"/\"]);\n\n\n      },\n        e => {\n          this.err.next(e)\n\n        });\n\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { BehaviorSubject, Subject } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { Profile } from '../profile/profile.model';\nimport {environment} from '../../environments/environment'\nconst BACKEND_URL = environment.apiUrl + \"/profile\"\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProfileService {\n\n  private profile: Profile;\n  private isProfileSet: boolean = false\n  private updatedProfile = new Subject<Profile>();\n  public err = new BehaviorSubject<any>(null);\n  constructor(\n    private http: HttpClient, private router: Router\n  ) { }\n\n  getProfileUpdateListener() {\n    return this.updatedProfile.asObservable();\n  }\n\n  getIsProfile() {\n    return this.profile;\n  }\n\n\n  getIsProfileSet() {\n    return this.isProfileSet\n  }\n\n\n  addProfile(title: string, content: string, imgpath: File) {\n    const postData = new FormData();\n    postData.append(\"username\", title);\n    postData.append(\"bio\", content);\n    postData.append(\"image\", imgpath, title);\n\n    this.http\n      .post<{ message: string; post: Profile }>(\n        BACKEND_URL +\"/create\",\n        postData\n      )\n      .subscribe(responseData => {\n        this.router.navigate(['/'])\n        this.err.next(null)\n\n      },\n        err => {\n          this.err.next(err)\n\n        })\n\n  }\n\n  updateProfile(id: string, username: string, bio: string, image: File | string) {\n    let profileData: Profile | FormData;\n    if (typeof image === \"object\") {\n      profileData = new FormData();\n      profileData.append(\"id\", id);\n      profileData.append(\"username\", username);\n      profileData.append(\"bio\", bio);\n      profileData.append(\"image\", image, username);\n    } else {\n      profileData = {\n        id: id,\n        username: username,\n        bio: bio,\n        imagePath: image,\n        creator: null\n      };\n    }\n\n    this.http\n      .put(BACKEND_URL+\"/edit/\" + id, profileData)\n      .subscribe(response => {\n\n        this.err.next(null)\n        this.router.navigate([\"/profile\"]);\n      },\n        err => {\n          console.log(err)\n          this.err.next(err)\n        });\n\n  }\n\n  getProfile() {\n\n    this.http.get<{ profile: any, message: string }>\n    (BACKEND_URL + \"/viewprofile\")\n      .subscribe(profile => {\n\n        let prof = profile.profile\n        this.profile = prof\n        this.isProfileSet = true\n        this.updatedProfile.next(profile.profile)\n        this.saveProfileData(profile.profile)\n      },\n        err => {\n        })\n\n  }\n\n  getProfileByCreatorId() {\n    return this.http.get<{ profile: any, message: string }>\n    (BACKEND_URL+\"/viewprofile\")\n  }\n\n  getPostUserByCreatorId(creatorId) {\n    return this.http.get<{ profile: any, message: string }>\n    (BACKEND_URL+\"/bycreator/\" + creatorId)\n  }\n\n  getAllUsers() {\n    return this.http.get<{ profile: any, message: string }>\n      (BACKEND_URL+\"/profiles\")\n  }\n\n  getProfileByUsername(uname: string) {\n    return this.http.get<{ profile: any, message: string }>\n      (BACKEND_URL +\"/\"+ uname)\n  }\n\n  getMyPost(uname: string) {\n    return this.http.get<{ post: any, message: string }>\n      (BACKEND_URL +\"/\"+ uname + \"/mypost\")\n\n  }\n\n  saveProfileData(profile) {\n    localStorage.setItem(\"profile\", profile)\n    localStorage.setItem(\"uname\", profile.username)\n  }\n\n  autogetProfile() {\n    const profile = localStorage.getItem(\"profile\")\n    if (profile) {\n      this.isProfileSet = true\n    }\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-spinner',\n  templateUrl: './spinner.component.html',\n  styleUrls: ['./spinner.component.css']\n})\nexport class SpinnerComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"text-center spinner\">\n    <div class=\"spinner-border\" role=\"status\">\n      <span class=\"sr-only\">Loading...</span>\n      \n    </div>\n    <h4> Please Wait ...</h4>\n  </div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n apiUrl : \"http://localhost:3000/api\"\n\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}