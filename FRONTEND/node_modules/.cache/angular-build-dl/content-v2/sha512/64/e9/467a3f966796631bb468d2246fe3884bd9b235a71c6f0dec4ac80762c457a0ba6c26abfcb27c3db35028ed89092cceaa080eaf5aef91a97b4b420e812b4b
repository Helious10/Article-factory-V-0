{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/auth/auth-interceptor.ts","./src/app/auth/auth.guard.ts","./src/app/auth/auth.service.ts","./src/app/auth/login/login.component.ts","./src/app/auth/login/login.component.html","./src/app/footer/footer.component.ts","./src/app/footer/footer.component.html","./src/app/header/header.component.ts","./src/app/header/header.component.html","./src/app/posts/create-post/create-post.component.ts","./src/app/posts/create-post/create-post.component.html","./src/app/posts/create-post/mime-type.validator.ts","./src/app/posts/myposts/myposts.component.ts","./src/app/posts/myposts/myposts.component.html","./src/app/posts/post-detail/post-detail.component.ts","./src/app/posts/post-detail/post-detail.component.html","./src/app/posts/post-list/post-list.component.ts","./src/app/posts/post-list/post-list.component.html","./src/app/profile/create-profile/create-profile.component.ts","./src/app/profile/create-profile/create-profile.component.html","./src/app/profile/view-profile/view-profile.component.ts","./src/app/profile/view-profile/view-profile.component.html","./src/app/services/post.service.ts","./src/app/services/profile.service.ts","./src/app/spinner/spinner.component.ts","./src/app/spinner/spinner.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { PostListComponent } from './posts/post-list/post-list.component';\nimport { CreatePostComponent } from './posts/create-post/create-post.component';\nimport { PostDetailComponent } from './posts/post-detail/post-detail.component';\nimport { LoginComponent } from './auth/login/login.component';\nimport { AuthGuard } from './auth/auth.guard';\nimport { MypostsComponent } from './posts/myposts/myposts.component';\nimport { CreateProfileComponent } from './profile/create-profile/create-profile.component';\nimport { ViewProfileComponent } from './profile/view-profile/view-profile.component';\n\n\n\nconst routes: Routes = [\n  { path: '', component: PostListComponent },\n \n  { path: 'myposts', component: MypostsComponent ,canActivate: [AuthGuard]},\n  { path: 'create', component: CreatePostComponent ,canActivate: [AuthGuard]},\n  { path: 'login', component: LoginComponent },\n  { path: 'myposts/:postId', component: PostDetailComponent ,canActivate: [AuthGuard]},\n  { path: 'myposts/edit/:postId', component: CreatePostComponent, canActivate: [AuthGuard] },\n  { path: 'profile', component: CreateProfileComponent,canActivate: [AuthGuard] },\n  { path: 'public/:profileId', component: ViewProfileComponent },\n  { path: 'profile/:profileId', component: ViewProfileComponent,canActivate: [AuthGuard]  },\n  { path: 'profile/edit/:profileId', component: CreateProfileComponent,canActivate: [AuthGuard]  },\n  { path: 'public/:profileId/posts/:postId', component: PostDetailComponent },\n  { path: ':postId', component: PostDetailComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, { useHash: true })],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from './auth/auth.service';\nimport { ProfileService } from './services/profile.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  constructor(private authService: AuthService,\n    private profileService:ProfileService) {}\n    title = 'Article_Factory';\n  ngOnInit() {\n   \n    this.authService.autoAuthUser();\n\n    this.profileService.autogetProfile()\n  }\n}\n","<app-header></app-header>\n<router-outlet></router-outlet>\n<hr>\n<app-footer></app-footer>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {ReactiveFormsModule} from '@angular/forms'\nimport { FormsModule }   from '@angular/forms';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HeaderComponent } from './header/header.component';\nimport { PostListComponent } from './posts/post-list/post-list.component';\nimport { CreatePostComponent } from './posts/create-post/create-post.component';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from \"@angular/common/http\";\nimport { PostService } from './services/post.service';\nimport { SpinnerComponent } from './spinner/spinner.component';\nimport { PostDetailComponent } from './posts/post-detail/post-detail.component';\nimport { LoginComponent } from './auth/login/login.component';\nimport { AuthInterceptor } from './auth/auth-interceptor';\nimport { AuthService } from './auth/auth.service';\nimport { AuthGuard } from './auth/auth.guard';\nimport { MypostsComponent } from './posts/myposts/myposts.component';\nimport { CreateProfileComponent } from './profile/create-profile/create-profile.component';\nimport { ViewProfileComponent } from './profile/view-profile/view-profile.component';\nimport { HashLocationStrategy, LocationStrategy } from '@angular/common';\nimport { FooterComponent } from './footer/footer.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    PostListComponent,\n    CreatePostComponent,\n    SpinnerComponent,\n    PostDetailComponent,\n    LoginComponent,\n    MypostsComponent,\n    CreateProfileComponent,\n    ViewProfileComponent,\n    FooterComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    FormsModule\n  ],\n  providers: [PostService,\n    AuthService,AuthGuard,\n    { provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true },\n    { provide: LocationStrategy, useClass: HashLocationStrategy }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import {\n  HttpInterceptor,\n  HttpRequest,\n  HttpHandler\n} from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\n\nimport { AuthService } from \"./auth.service\";\n\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n  constructor(private authService: AuthService) { }\n\n  intercept(req: HttpRequest<any>, next: HttpHandler) {\n\n\n    const authToken = this.authService.getToken();\n    const authRequest = req.clone({\n      headers: req.headers.set(\"Authorization\", \"Bearer \" + authToken)\n    });\n    return next.handle(authRequest);\n  }\n}\n","import {\n  CanActivate,\n  ActivatedRouteSnapshot,\n  RouterStateSnapshot,\n  Router\n} from \"@angular/router\";\nimport { Injectable } from \"@angular/core\";\nimport { Observable } from \"rxjs\";\nimport { AuthService } from './auth.service';\n\n\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n  constructor(private authService: AuthService, private router: Router) { }\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): boolean | Observable<boolean> | Promise<boolean> {\n    const isAuth = this.authService.getIsAuth();\n    if (!isAuth) {\n      this.router.navigate(['/login']);\n    }\n    return isAuth;\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { BehaviorSubject, Subject } from 'rxjs';\nimport { ProfileService } from '../services/profile.service';\nimport { AuthData } from './user.model';\n\nimport {environment} from '../../environments/environment'\nconst BACKEND_URL = environment.apiUrl + \"/user/\"\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  private isAuthenticated = false;\n  private token: string;\n  private tokenTimer: any;\n  private userId: string;\n  private authStatusListener = new Subject<boolean>();\n  public err = new BehaviorSubject<any>(null);\n  constructor(private http: HttpClient, private router: Router,\n    private profileService: ProfileService) { }\n\n\n  getToken() {\n    return this.token;\n  }\n\n  getIsAuth() {\n    return this.isAuthenticated;\n  }\n\n  getUserId() {\n    return this.userId;\n  }\n  getAuthStatusListener() {\n    return this.authStatusListener.asObservable();\n  }\n\n\n  signIn(email: string, password: string) {\n    const authData: AuthData = { email: email, password: password };\n    this.http\n      .post<{ token: string; expiresIn: number, userId: string }>(\n        BACKEND_URL + \"login\",\n        authData\n      )\n      .subscribe(response => {\n\n        this.err.next(null)\n\n        const token = response.token;\n        this.token = token;\n        if (token) {\n          const expiresInDuration = response.expiresIn;\n          this.setAuthTimer(expiresInDuration);\n          this.isAuthenticated = true;\n          this.userId = response.userId;\n          this.authStatusListener.next(true);\n          const now = new Date();\n          const expirationDate = new Date(now.getTime() + expiresInDuration * 1000);\n\n          this.saveAuthData(token, expirationDate, this.userId);\n          this.router.navigate([\"/\"]);\n        }\n      },\n        err => {\n          this.err.next(err)\n        });\n  }\n\n\n  createUser(email: string, password: string) {\n    const authData: AuthData = { email: email, password: password };\n    this.http\n      .post(BACKEND_URL + \"signup\", authData)\n      .subscribe(response => {\n        this.err.next(null)\n        this.router.navigate([\"/\"]);\n\n      },\n        err => {\n          this.err.next(err)\n        });\n  }\n\n\n\n  logout() {\n    this.token = null;\n    this.isAuthenticated = false;\n    this.authStatusListener.next(false);\n    clearTimeout(this.tokenTimer);\n    this.clearAuthData();\n    this.router.navigate([\"/\"]);\n  }\n\n\n  autoAuthUser() {\n    const authInformation = this.getAuthData();\n\n    if (!authInformation) {\n      return;\n    }\n    const now = new Date();\n    const expiresIn = authInformation.expirationDate.getTime() - now.getTime();\n\n    if (expiresIn > 0) {\n      this.token = authInformation.token;\n      this.isAuthenticated = true;\n      this.userId = authInformation.userId;\n      this.setAuthTimer(expiresIn / 1000);\n      this.authStatusListener.next(true);\n    }\n  }\n\n  private getAuthData() {\n    const token = localStorage.getItem(\"token\");\n    const expirationDate = localStorage.getItem(\"expiration\");\n    const userId = localStorage.getItem(\"userId\");\n    if (!token || !expirationDate) {\n      return;\n    }\n    return {\n      token: token,\n      expirationDate: new Date(expirationDate),\n      userId: userId\n    }\n  }\n\n\n\n  private setAuthTimer(duration: number) {\n\n    this.tokenTimer = setTimeout(() => {\n      this.logout();\n    }, duration * 1000);\n  }\n\n  private saveAuthData(token: string, expirationDate: Date, userId: string) {\n    this.profileService.getProfile()\n    localStorage.setItem(\"token\", token);\n    localStorage.setItem(\"expiration\", expirationDate.toISOString());\n    localStorage.setItem(\"userId\", userId);\n  }\n\n\n  private clearAuthData() {\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"expiration\");\n    localStorage.removeItem(\"userId\");\n\n    localStorage.removeItem(\"profile\");\n    localStorage.removeItem(\"uname\");\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { AuthService } from '../auth.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  isLoginMode = true;\n  isLoading = false;\n  error: any = null;\n  constructor(private authService: AuthService) { }\n\n  ngOnInit(): void {\n    this.error = null\n    this.authService.err.subscribe(err => {\n      this.error = err\n      this.isLoading = false\n    })\n  }\n\n  onSwitchMode() {\n    this.isLoginMode = !this.isLoginMode;\n  }\n\n  onSubmit(form: NgForm) {\n    this.isLoading = true;\n    if (!form.valid) {\n      return;\n    }\n    const email = form.value.email;\n    const password = form.value.password;\n\n    if (this.isLoginMode) {\n      this.authService.signIn(email, password)\n\n      form.reset()\n    }\n    else {\n      this.authService.createUser(email, password)\n\n      form.reset()\n    }\n  }\n\n}\n","\n<div class=\"container\">\n\n\n<div class=\"row\">\n    <div class=\"col-xs-12 col-md-6 col-md-offset-3\">\n        <div class=\"alert alert-danger\" *ngIf=\"error\">\n            <p>{{ error.status }} - {{error.error.message}}</p>\n        </div>\n        <div *ngIf=\"isLoading\" style=\"text-align: center;\" class=\"loading-text\">\n           <app-spinner></app-spinner>\n        </div>\n        <form #authForm=\"ngForm\" (ngSubmit)=\"onSubmit(authForm)\" *ngIf=\"!isLoading\">\n            <div class=\"form-group\">\n                <label for=\"email\">E-Mail</label>\n\n                <input type=\"email\" id=\"email\" class=\"form-control\" ngModel name=\"email\" required email />\n            </div>\n            <div class=\"form-group\">\n                <label for=\"password\">Password</label>\n                <input type=\"password\" id=\"password\" class=\"form-control\" ngModel name=\"password\" required minlength=\"6\" />\n            </div>\n\n            <div class=\"form-group\">\n                <button class=\"btn btn-primary\" type=\"submit\" [disabled]=\"!authForm.valid\">\n                    {{ isLoginMode ? 'Login' : 'Sign Up' }}\n                </button> |\n                <button class=\"btn btn-primary\" (click)=\"onSwitchMode()\" type=\"button\">\n                    Switch to {{ isLoginMode ? 'Sign Up' : 'Login' }}\n                </button>\n\n                <a [routerLink]=\"['/reset-password']\" class=\"btn btn-link\">Forget Password</a>\n\n            </div>\n\n            \n        </form>\n    </div>\n</div>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","\n\n\n<ul class=\"nav  mymenu\">\n    <li class=\"nav-item\">\n        <a href=\"https://github.com\" aria-label=\"Github\" class=\"nav-link text-github\"><i class=\"fa fa-github\"\n                style=\"font-size: 28px; color: black;\"></i></a>\n    </li>\n    <li class=\"nav-item\">\n        <a href=\"https://www.instagram.com\" aria-label=\"Instagram\" class=\"nav-link\"><i\n                class=\"fa fa-instagram\" style=\"font-size: 28px; color: black;\"></i></a>\n    </li>\n    <li class=\"nav-item\">\n        <a href=\"https://www.linkedin.com\" aria-label=\"LinkedIn\" class=\"nav-link\"><i\n                class=\"fa fa-linkedin\" style=\"font-size: 28px; color: black;\"></i></a>\n    </li>\n</ul>\n\n<h5  class=\"text-center copyright\"> A project by Anirban Biswas and Aditi Mondal</h5>","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { AuthService } from '../auth/auth.service';\nimport { Profile } from '../profile/profile.model';\nimport { ProfileService } from '../services/profile.service';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit, OnDestroy {\n  userIsAuthenticated = false;\n  private authListenerSubs: Subscription;\n  profile: any;\n  username: string\n  profileisSet = false\n  constructor(private authService: AuthService, private profileService: ProfileService,\n    private route: ActivatedRoute) { }\n\n  ngOnInit(): void {\n\n\n    this.profileisSet = this.profileService.getIsProfileSet()\n    this.userIsAuthenticated = this.authService.getIsAuth();\n    if (this.userIsAuthenticated) {\n      this.getProfile()\n    }\n\n    this.authListenerSubs = this.authService\n      .getAuthStatusListener()\n      .subscribe(isAuthenticated => {\n        this.userIsAuthenticated = isAuthenticated;\n        if (this.userIsAuthenticated) {\n          this.getProfile()\n        }\n      });\n  }\n\n\n  onLogout() {\n    this.authService.logout();\n  }\n\n  getProfile() {\n    this.profileService.getProfileByCreatorId().subscribe(prof => {\n      this.profileisSet = true\n      this.username = prof.profile.username\n      this.profile = {\n        id: prof.profile._id,\n        username: prof.profile.username,\n        bio: prof.profile.bio,\n        imagePath: prof.profile.imagePath,\n        creator: prof.profile.creator\n      };\n    },\n      err => {\n        this.profileisSet = false\n        this.username = null\n      })\n\n  }\n\n\n  ngOnDestroy() {\n    this.authListenerSubs.unsubscribe();\n  }\n\n}\n","<div class=\"container\">\n  <nav class=\"navbar navbar-expand-lg navbar-light bg-light py-4\">\n    <a class=\"navbar-brand\" href=\"#\">Article Factory</a>\n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarTogglerDemo02\"\n      aria-controls=\"navbarTogglerDemo02\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n      <span class=\"navbar-toggler-icon\"></span>\n    </button>\n\n    <div class=\"collapse navbar-collapse\" id=\"navbarTogglerDemo02\">\n      <ul class=\"navbar-nav mr-auto mt-2 mt-lg-0\">\n        <li class=\"nav-item\" routerLinkActive=\"active\" [routerLinkActiveOptions]=\"{ exact: true }\">\n          <a class=\"nav-link\" routerLink=\"/\">Home</a>\n        </li>\n        <li class=\"nav-item\" routerLinkActive=\"active\" *ngIf=\"userIsAuthenticated\">\n          <a class=\"nav-link\" routerLink=\"/create\">Create</a>\n        </li>\n\n        <li class=\"nav-item\" routerLinkActive=\"active\" *ngIf=\"userIsAuthenticated && profileisSet\">\n          <a class=\"nav-link\" [routerLink]=\"['/profile',username]\">Profile</a>\n        </li>\n\n        <li class=\"nav-item\" routerLinkActive=\"active\" *ngIf=\"userIsAuthenticated && !profileisSet \">\n          <a class=\"nav-link\" [routerLink]=\"['/profile']\">Create Profile</a>\n        </li>\n\n        <li class=\"nav-item\" routerLinkActive=\"active\" *ngIf=\"userIsAuthenticated\">\n          <a class=\"nav-link\" routerLink=\"/myposts\">MyPosts</a>\n        </li>\n\n        <li class=\"nav-item\" routerLinkActive=\"active\" *ngIf=\"!userIsAuthenticated\">\n          <a class=\"nav-link\" routerLink=\"/login\">Auth</a>\n        </li>\n\n        <li class=\"nav-item\" routerLinkActive=\"active\" *ngIf=\"userIsAuthenticated\">\n          <a class=\"nav-link\" (click)=\"onLogout()\">Logout</a>\n        </li>\n      </ul>\n\n      <ul class=\"nav mymenu mt-5\">\n        <li class=\"nav-item\"><a href=\"https://github.com\" aria-label=\"Github\" class=\"nav-link text-github\"><i\n              class=\"fa fa-github\" style=\"font-size: 28px; color: rgb(25, 0, 85);\"></i></a></li>\n        <li class=\"nav-item\"><a href=\"https://www.youtube.com\" aria-label=\"Youtube\"\n            class=\"nav-link\"><i class=\"fa fa-youtube\" style=\"font-size: 28px; color: rgb(235, 23, 23);\"></i></a></li>\n        <li class=\"nav-item\"><a href=\"https://www.linkedin.com\" aria-label=\"LinkedIn\"\n            class=\"nav-link\"><i class=\"fa fa-linkedin\" style=\"font-size: 28px; color: rgb(27, 13, 223);\"></i></a></li>\n      </ul>\n    </div>\n  </nav>\n\n  <ul class=\"social\">\n    <li><a href=\"https://facebook.com/\"><i class=\"fa fa-facebook\"></i></a></li>\n    <li><a href=\"https://www.instagram.com\"><i class=\"fa fa-instagram\"></i></a></li>\n    <li><a href=\"https://www.twitter.com\"><i class=\"fa fa-twitter\"></i></a></li>\n  </ul>\n</div>\n\n\n<div class=\"footer-icons hidden-xs hidden-sm sideicons d-none d-md-block\">\n  <ul class=\"navbar-nav\">\n    <li class=\"nav-item inline-block\"><a href=\"https://facebook.com\" aria-label=\"Facebook\"\n        class=\"nav-link text-github\"><i class=\"fa fa-facebook\" style=\"font-size: 24px; color: rgb(0, 78, 223);\"></i></a></li>\n    <li class=\"nav-item inline-block\"><a href=\"https://www.instagram.com\" aria-label=\"Instagram\"\n        class=\"nav-link\"><i class=\"fa fa-instagram\" style=\"font-size: 24px; color: rgb(172, 0, 143);\"></i></a></li>\n    <li class=\"nav-item inline-block\"><a href=\"https://www.twitter.com\"\n        aria-label=\"Twitter\" class=\"nav-link\"><i class=\"fa fa-twitter\" style=\"font-size: 24px; color: rgb(0, 204, 255);\"></i></a>\n    </li>\n  </ul>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { Post } from '../post.model';\nimport { ActivatedRoute, ParamMap, Router } from '@angular/router';\nimport { mimeType } from './mime-type.validator';\nimport { PostService } from '../../services/post.service';\nimport { ProfileService } from 'src/app/services/profile.service';\n\n\n@Component({\n  selector: 'app-create-post',\n  templateUrl: './create-post.component.html',\n  styleUrls: ['./create-post.component.css']\n})\nexport class CreatePostComponent implements OnInit {\n\n  postdate: Date\n  fetchedDate: Date\n  form: FormGroup;\n  isLoading: boolean = false\n  imagePreview: string\n  post: Post;\n  private mode = \"create\";\n  private postId: string;\n  constructor(\n    private ps: PostService,\n    public route: ActivatedRoute,\n    public profileService:ProfileService  ,\n    private router: Router,) { }\n\n  ngOnInit(): void {\n    this.checkProfileCreated()\n    this.route.paramMap.subscribe((paramMap: ParamMap) => {\n      if (paramMap.has(\"postId\")) {\n        this.mode = \"edit\";\n        this.postId = paramMap.get(\"postId\");\n        this.getPostById(this.postId)\n      }\n      else {\n        this.mode = \"create\";\n        this.postId = null;\n\n      }\n    })\n    this.createForm()\n  }\n\n  getPostById(id) {\n    this.isLoading=true\n    this.ps.getPost(id).subscribe(postData => {\n    \n      this.post = {\n        id: postData._id,\n        title: postData.title,\n        content: postData.content,\n        imagePath: postData.imagePath,\n        creator: postData.creator\n      };\n      this.imagePreview = postData.imagePath\n      this.form.setValue({\n        title: this.post.title,\n        content: this.post.content,\n        image: this.post.imagePath\n      });\n      this.isLoading = false;\n    });\n\n  }\n\n  createForm() {\n    this.form = new FormGroup({\n      title: new FormControl(null, {\n        validators: [Validators.required, Validators.minLength(3)]\n      }),\n      content: new FormControl(null, { validators: [Validators.required] }),\n      image: new FormControl(null, {\n        validators: [Validators.required],\n        asyncValidators: [mimeType]\n      })\n    });\n  }\n\n  onImagePicked(event: Event) {\n    const file = (event.target as HTMLInputElement).files[0];\n    this.form.patchValue({ image: file });\n    this.form.get(\"image\").updateValueAndValidity();\n    const reader = new FileReader();\n    reader.onload = () => {\n      this.imagePreview = reader.result as string;\n    };\n    reader.readAsDataURL(file);\n  }\n\n  onSavePost() {\n    this.postdate = new Date()\n    if (this.form.invalid) {\n      return;\n    }\n    this.isLoading = true;\n    if (this.mode === \"create\") {\n      this.ps.addPost(\n        this.form.value.title,\n        this.form.value.content,\n        this.form.value.image,\n        this.postdate\n      );\n    }\n    else {\n      this.ps.updatePost(\n        this.postId,\n        this.form.value.title,\n        this.form.value.content,\n        this.form.value.image\n      );\n    }\n    this.form.reset();\n  }\n\n  checkProfileCreated(){\n    this.profileService.getProfileByCreatorId().subscribe(profile => {\n      if(!profile){\n        this.router.navigate([\"/profile\"])\n      }\n    },e=>{\n      this.router.navigate([\"/profile\"])\n    })\n  }\n}\n\n\n","<hr>\n<div class=\"container\">\n  <div *ngIf=\"isLoading\" style=\"text-align: center;\" class=\"loading-text\">\n    <app-spinner></app-spinner>\n </div>\n  <form [formGroup]=\"form\" (submit)=\"onSavePost()\">\n    <div class=\"form-group\">\n      <input\n        type=\"text\"\n        formControlName=\"title\"\n        class=\"form-control\"\n        placeholder=\"Post Title\"\n      />\n      <span\n        class=\"text-danger\"\n        *ngIf=\"form.get('title').invalid && form.get('title').touched\"\n        >Please enter a post title.</span\n      >\n    </div>\n    <div class=\"form-group\">\n      <button\n        type=\"button\"\n        class=\"btn btn-outline-success\"\n        (click)=\"filePicker.click()\"\n      >\n        Pick Image\n      </button>\n      <input\n        type=\"file\"\n        class=\"form-control\"\n        #filePicker\n        (change)=\"onImagePicked($event)\"\n      />\n\n      <div\n        class=\"image-preview\"\n        *ngIf=\"imagePreview !== '' && imagePreview && form.get('image').valid\"\n      >\n        <img [src]=\"imagePreview\" [alt]=\"form.value.title\" />\n      </div>\n      <span\n        class=\"text-danger\"\n        *ngIf=\"form.get('image').invalid && form.dirty && form.touched\"\n        >Please Choose a valid image.</span\n      >\n    </div>\n    <div class=\"form-group\">\n      <textarea\n        class=\"form-control\"\n        rows=\"4\"\n        formControlName=\"content\"\n        placeholder=\"Post Content\"\n      ></textarea>\n      <span\n        class=\"text-danger\"\n        *ngIf=\"form.get('content').invalid && form.get('content').touched\"\n        >Please enter a post title.</span\n      >\n    </div>\n    <button class=\"btn btn-primary\" [disabled]=\"form.invalid\" type=\"submit\">\n      Save Post\n    </button>\n  </form>\n</div>\n","import { AbstractControl } from \"@angular/forms\";\nimport { Observable, Observer, of } from \"rxjs\";\n\nexport const mimeType = (\n  control: AbstractControl\n): Promise<{ [key: string]: any }> | Observable<{ [key: string]: any }> => {\n  if (typeof(control.value) === 'string') {\n    return of(null);\n  }\n  const file = control.value as File;\n  const fileReader = new FileReader();\n  const frObs = Observable.create(\n    (observer: Observer<{ [key: string]: any }>) => {\n      fileReader.addEventListener(\"loadend\", () => {\n        const arr = new Uint8Array(fileReader.result as ArrayBuffer).subarray(0, 4);\n        let header = \"\";\n        let isValid = false;\n        for (let i = 0; i < arr.length; i++) {\n          header += arr[i].toString(16);\n        }\n        switch (header) {\n          case \"89504e47\":\n            isValid = true;\n            break;\n          case \"ffd8ffe0\":\n          case \"ffd8ffe1\":\n          case \"ffd8ffe2\":\n          case \"ffd8ffe3\":\n          case \"ffd8ffe8\":\n            isValid = true;\n            break;\n          default:\n            isValid = false; // Or you can use the blob.type as fallback\n            break;\n        }\n        if (isValid) {\n          observer.next(null);\n        } else {\n          observer.next({ invalidMimeType: true });\n        }\n        observer.complete();\n      });\n      fileReader.readAsArrayBuffer(file);\n    }\n  );\n  return frObs;\n};\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { PostService } from '../../services/post.service';\nimport { Subscription } from 'rxjs';\nimport { Post } from '../post.model';\nimport { AuthService } from '../../auth/auth.service';\nimport { ProfileService } from '../../services/profile.service';\nimport { Profile } from '../../profile/profile.model';\n\n@Component({\n  selector: 'app-myposts',\n  templateUrl: './myposts.component.html',\n  styleUrls: ['./myposts.component.css']\n})\nexport class MypostsComponent implements OnInit, OnDestroy {\n  posts: Post[] = [];\n  postbyUser: Profile[] = []\n  isloading = false;\n  error: any\n  userId: string\n  private postsSub: Subscription;\n  constructor(private ps: PostService, private authService: AuthService,\n    private profileService: ProfileService) { }\n\n  ngOnInit(): void {\n    this.getErrors()\n    this.isloading = true\n    this.getMyPost()\n    this.postsSub = this.ps.getPostUpdateListener()\n      .subscribe((posts: Post[]) => {\n\n        this.getPostUserbyCreatorId(posts)\n        this.isloading = false;\n        this.posts = posts;\n      }, e => {\n        this.isloading = false;\n        this.error = e\n      });\n  }\n\n  getPostUserbyCreatorId(post: Post[]) {\n    let creatorId = []\n    for (let i in post) {\n      creatorId.push(post[i].creator)\n\n    }\n\n    let unique = [...new Set(creatorId)];\n    for (let i in unique) {\n      this.profileService.getPostUserByCreatorId(unique[i])\n        .subscribe(user => {\n          this.postbyUser.push(user.profile)\n        })\n    }\n\n  }\n\n\n\n  getErrors() {\n    this.error = null\n    this.ps.err.subscribe(err => {\n      this.error = err\n      this.isloading = false\n    })\n  }\n\n  getMyPost() {\n    this.ps.getMyPost(this.userId)\n  }\n\n  ngOnDestroy() {\n    this.postsSub.unsubscribe();\n  }\n}","<div class=\"site-section bg-light\">\n  <div class=\"container\">\n    <div class=\"row mb-5\">\n      <div class=\"col-md-12 text-center\">\n        <h2 class=\"font-weight-bold text-black\">My Posts</h2>\n      </div>\n    </div>\n\n    <div class=\"row\">\n      <div class=\"alert alert-danger\" *ngIf=\"error && error.error.message\" >\n        <p>{{ error.status }} - {{error.error.message}}</p>\n    </div>\n\n    <div class=\"alert alert-danger\" *ngIf=\"error && !error.error.message\" >\n      <p>{{ error.status }} - {{error.statusText}}</p>\n  </div>\n    <div *ngIf=\"isloading\" style=\"text-align: center;\" class=\"loading-text\">\n       <app-spinner></app-spinner>\n    </div>\n    <ng-container *ngIf=\"posts.length>0\">\n\n    \n      <div class=\"col-md-6\" *ngFor = \"let post of posts\">\n        <div class=\"d-block podcast-entry bg-white mb-5 aos-init aos-animate\" data-aos = \"fade-up\">\n          <div class=\"image w-100\"  [style.backgroundImage]=\"'url('+ post.imagePath +') ' \"></div>\n          <div class=\"text w-100\">\n            <h3 class=\"\">\n              <a [routerLink]=\"[post.id]\">{{post.title}}</a>\n            </h3>\n\n            <div class=\"text-white mb-3\">\n              <span class=\"text-black-opacity-05\" *ngFor=\"let  user of postbyUser\">\n                <small *ngIf=\"user.creator === post.creator\">\n                  <a [routerLink]=\"['../public', user.username]\">by {{user.username}}</a>\n                  <span class=\"sep\"> /\n                  </span>{{post.postDate | date:'short'}}</small>\n              </span>\n            </div>\n            <p class=\"mb-4\">{{post.content}} </p>\n          </div>\n        </div>\n\n      </div>\n    </ng-container>\n\n    <div *ngIf=\"posts.length==0 && !isloading\" style=\"text-align: center;\" class=\"loading-text\">\n      <h2>No Posts Found</h2>\n   </div>\n    </div>\n  </div>\n</div>\n\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { ActivatedRoute, ParamMap, Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { ProfileService } from 'src/app/services/profile.service';\n\nimport { AuthService } from '../../auth/auth.service';\nimport { PostService } from '../../services/post.service';\nimport { Post } from '../post.model';\n\n@Component({\n  selector: 'app-post-detail',\n  templateUrl: './post-detail.component.html',\n  styleUrls: ['./post-detail.component.css']\n})\nexport class PostDetailComponent implements OnInit, OnDestroy {\n  isAuth\n  isloading = false;\n  url: string\n  error: any\n  postId: string;\n  post: Post;\n  userId: String;\n  userIsAuthenticated: boolean\n  private authStatusSub: Subscription;\n  profile: any\n\n  constructor(\n    public postsService: PostService,\n    public route: ActivatedRoute,\n    public router: Router,\n    private authService: AuthService,\n    public profileService:ProfileService\n  ) { }\n\n  ngOnInit(): void {\n    this.url = this.router.url.split(\"/\")[1]\n    \n    this.authData()\n    this.getErrors()\n\n    this.route.paramMap.subscribe((paramMap: ParamMap) => {\n\n      if (paramMap.has(\"postId\")) {\n        this.postId = paramMap.get(\"postId\");\n        this.getPostById(this.postId)\n      }\n    })\n  }\n\n  authData() {\n    this.isAuth = this.authService.getIsAuth()\n    this.userId = this.authService.getUserId();\n    this.authStatusSub = this.authService\n      .getAuthStatusListener()\n      .subscribe(isAuthenticated => {\n        this.userIsAuthenticated = isAuthenticated;\n        this.userId = this.authService.getUserId();\n      });\n  }\n  getErrors() {\n    this.error = null\n    this.postsService.err.subscribe(err => {\n      this.error = err\n      this.isloading = false\n\n    })\n\n  }\n\n  getPostById(id) {\n    this.isloading = true\n    this.postsService.getPost(this.postId).subscribe(postData => {\n      console.log(postData)\n      this.post = {\n        id: postData._id,\n        title: postData.title,\n        content: postData.content,\n        imagePath: postData.imagePath,\n        creator: postData.creator,\n        postDate:postData.postDate\n      };\n      this.getPostUserByCreatorId(postData.creator) \n\n      // this.compareIds(this.userId,this.post.creator)\n      this.isloading = false\n    })\n    e => {\n      this.isloading = false\n      this.error = e\n    }\n  }\n\n\n\n  OnDelete(postId: string) {\n    this.postsService.deletePost(postId);\n  }\n\n\n  getPostUserByCreatorId(id) {\n    this.profileService.getPostUserByCreatorId(id).subscribe(profile => {\n      if (profile.profile) {\n        this.profile= profile.profile\n      }else{\n      }\n    },e=>{\n      this.isloading = false\n    })\n\n  }\n  ngOnDestroy() {\n\n    this.authStatusSub.unsubscribe();\n  }\n}\n","  <div class=\"container\">\n    <div class=\"alert alert-danger\" *ngIf=\"error\">\n      <p>{{ error.status }} - {{error.error.message}}</p>\n  </div>\n  <div *ngIf=\"isloading\" style=\"text-align: center;\" class=\"loading-text\">\n    <app-spinner></app-spinner>\n  </div>\n    <div class=\"row\">\n\n      \n\n      <div class=\"col-md-3 col-xs-12\" *ngIf=\"isAuth && url =='myposts' \">\n        <div class=\"list-group\">\n          <a [routerLink]=\"['../edit',postId]\" class=\"list-group-item list-group-item-action\">\n            Edit Post\n          </a>\n          <a data-toggle=\"modal\" data-target=\"#exampleModal\" class=\"list-group-item list-group-item-action\">Delete Post</a>\n\n        </div>\n\n\n        <!-- Modal -->\n        <div class=\"modal fade\" id=\"exampleModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\"\n          aria-hidden=\"true\">\n          <div class=\"modal-dialog\" role=\"document\">\n            <div class=\"modal-content\">\n              <div class=\"modal-header\">\n                <h5 class=\"modal-title\" id=\"exampleModalLabel\">Delete Confirmation Box</h5>\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                  <span aria-hidden=\"true\">&times;</span>\n                </button>\n              </div>\n              <div class=\"modal-body\">\n                Please click on Ok button to Delete the post permanently\n              </div>\n              <div class=\"modal-footer\">\n                <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Cancel</button>\n                <button type=\"button\" class=\"btn btn-primary\" data-dismiss=\"modal\" (click)=\"OnDelete(postId)\">Confirm</button>\n              </div>\n            </div>\n          </div>\n        </div>\n\n\n      </div>\n\n      <div class=\"col-md-9 main\" *ngIf=\"post\">\n        <div class=\"card-body\">\n          <h1>{{post.title}}</h1>\n          <div class=\"text-white mb-3\">\n            <span class=\"text-black-opacity-05\" >\n              <small *ngIf=\"profile\">\n                <a [routerLink]=\"['../public', profile.username]\">by {{profile.username}}</a>\n                \n                <span class=\"sep\"> /\n                </span>{{post.postDate | date:'short'}}</small>\n            </span>\n          </div>\n\n          <div class=\"img\">\n            <img src={{post.imagePath}} alt=\"\" class=\"img-responsive center\">\n          </div>\n          <hr>\n\n          <p>{{post.content}}</p>\n        </div>\n\n      </div>\n    </div>\n\n  </div>","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { PostService } from '../../services/post.service';\nimport { Subscription } from 'rxjs';\nimport { Post } from '../post.model';\nimport { AuthService } from '../../auth/auth.service';\nimport { ProfileService } from '../../services/profile.service';\nimport { Profile } from '../../profile/profile.model';\n\n@Component({\n  selector: 'app-post-list',\n  templateUrl: './post-list.component.html',\n  styleUrls: ['./post-list.component.css']\n})\nexport class PostListComponent implements OnInit, OnDestroy {\n  userIsAuthenticated = false;\n  private authListenerSubs: Subscription;\n\n  posts: Post[] = [];\n  user: Profile[] = []\n  postbyUser: Profile[] = []\n  isloading = false;\n  error: any\n  userId: string\n  private postsSub: Subscription;\n  constructor(private ps: PostService,\n    private authService: AuthService,\n    private profileService: ProfileService) { }\n\n  ngOnInit(): void {\n    this.checkAuth()\n    this.getErrors()\n    this.getUsers()\n    this.isloading = true\n    this.userId = this.authService.getUserId();\n    this.ps.getPosts()\n\n    this.postsSub = this.ps.getPostUpdateListener()\n      .subscribe((posts: Post[]) => {\n\n\n        this.isloading = false;\n        this.posts = posts;\n        this.sortPostByDate(posts)\n        this.getPostUserbyCreatorId(this.posts)\n        console.log(\"posts is\", this.posts)\n      }, e => {\n        this.isloading = false;\n        this.error = e\n      });\n  }\n\n  sortPostByDate(post){\n    post.sort((a, b) => new Date(b.postDate).getTime() - new Date(a.postDate).getTime());\n\n  }\n  getErrors() {\n    this.error = null\n    this.ps.err.subscribe(err => {\n      this.error = err\n      this.isloading = false\n    })\n  }\n\n  checkAuth() {\n    this.userIsAuthenticated = this.authService.getIsAuth();\n\n    this.authListenerSubs = this.authService\n      .getAuthStatusListener()\n      .subscribe(isAuthenticated => {\n        \n        this.userIsAuthenticated = isAuthenticated;\n        this.getUserProfile()\n      });\n  }\n\n  getUserProfile(){\n\n  }\n\n  getUsers() {\n    this.profileService.getAllUsers().subscribe(user => {\n      this.user = user.profile\n    })\n  }\n\n  getPostUserbyCreatorId(post: Post[]) {\n    let creatorId = []\n    for (let i in post) {\n      creatorId.push(post[i].creator)\n\n    }\n\n    let unique = [...new Set(creatorId)];\n    for (let i in unique) {\n      this.profileService.getPostUserByCreatorId(unique[i])\n        .subscribe(user => {\n          this.postbyUser.push(user.profile)\n\n        })\n    }\n\n  }\n\n\n  ngOnDestroy() {\n    this.postsSub.unsubscribe();\n    this.authListenerSubs.unsubscribe();\n  }\n\n}\n\n\n\n","<div class=\"container hero\" *ngIf = \"!userIsAuthenticated\">\n  <div class=\"row align-items-center text-center text-md-left\">\n    <div class=\"col-lg-4\">\n      <h1 class=\"mb-3 display-3\">Share Your Story to the World</h1>\n      <p>Join with us! Register or Login. Write your story now!!</p>\n    </div>\n\n    <div class=\"col-lg-8\">\n      <img src=\"assets/main.jpg\" alt=\"Image\" class=\"img-fluid\">\n    </div>\n  </div>\n</div>\n\n<hr>\n<div class=\"site-section\">\n  <div class=\"container\">\n    <div class=\"row\">\n      <div *ngIf=\"isloading\" style=\"text-align: center;\" class=\"loading-text\">\n        <app-spinner></app-spinner>\n     </div>\n      <div class=\"col-lg-8\">\n        <div class=\"d-block d-md-flex podcast-entry bg-white mb-5 aos-init aos-animate\"\n          *ngFor=\"let post of posts;let i=index\" data-aos=\"fade-up\">\n          <div class=\"image\" [style.backgroundImage]=\"'url('+ post.imagePath +') ' \"></div>\n          <div class=\"text\">\n            <h3 class=\"font-weight-dark\">\n              <a [routerLink]=\"[post.id]\"> {{ post.title }}</a>\n            </h3>\n            <div class=\"text-white mb-3\">\n              <span class=\"text-black-opacity-05\" *ngFor=\"let  user of postbyUser\">\n                <small *ngIf=\"user.creator === post.creator\">\n                  <a [routerLink]=\"['public', user.username]\">by {{user.username}}</a><span class=\"sep\"> /\n                  </span>{{post.postDate | date:'short'}}</small>\n              </span>\n            </div>\n\n            <div class=\"desc\">\n              <p>{{post.content |slice:0: 170 }}\n                <a [routerLink]=\"[post.id]\">{{post.content.length > 170 ? '...Read More' : ''}}</a></p>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"col-lg-4\">\n        <div class=\"featured-user  mb-5 mb-lg-0\">\n          <h3 class=\"mb-4\">Our Writters</h3>\n          <ul class=\"list-unstyled\">\n            <li *ngFor=\"let usr of user\">\n              <a [routerLink]=\"['public',usr.username]\" class=\"d-flex align-items-center\">\n                <img src={{usr.imagePath}} class=\"img-fluid mr-2\">\n                <div class=\"podcaster\">\n                  <span class=\"d-block\">{{usr.username}}</span>\n                  <span class=\"small\">{{usr.bio |slice:0: 70}}</span>\n                </div>\n              </a>\n            </li>\n\n\n          </ul>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, ParamMap, Router } from '@angular/router';\nimport { mimeType } from '../../posts/create-post/mime-type.validator';\nimport { ProfileService } from '../../services/profile.service';\nimport { Profile } from '../profile.model';\n\n@Component({\n  selector: 'app-create-profile',\n  templateUrl: './create-profile.component.html',\n  styleUrls: ['./create-profile.component.css']\n})\nexport class CreateProfileComponent implements OnInit {\n  form: FormGroup;\n  isLoading: boolean = true\n  imagePreview: string\n  post: any;\n  uname: string\n  error: string\n  private mode = \"create\";\n  private profileId: string;\n  constructor(private profileService: ProfileService\n    , private router: Router,\n    public route: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    this.route.paramMap.subscribe((paramMap: ParamMap) => {\n      if (paramMap.has(\"profileId\")) {\n        this.mode = \"edit\";\n        this.uname = paramMap.get(\"profileId\");\n        this.getProfileById(this.uname)\n      }\n      else {\n        this.mode = \"create\";\n        this.uname = null;\n\n      }\n    })\n    this.createForm()\n    this.checkProfileExist()\n  }\n\n  getProfileById(id) {\n    this.isLoading = true\n    this.profileService.getProfileByUsername(id).subscribe(profile => {\n      this.isLoading = false\n      this.post = {\n        id: profile.profile._id,\n        username: profile.profile.username,\n        bio: profile.profile.bio,\n        imagePath: profile.profile.imagePath,\n        creator: profile.profile.creator\n      };\n      this.profileId = profile.profile._id\n      this.imagePreview = profile.profile.imagePath\n      this.form.setValue({\n        username: this.post.username,\n        bio: this.post.bio,\n        image: this.post.imagePath\n      });\n\n    })\n  }\n\n  checkProfileExist() {\n    this.isLoading = true\n    this.profileService.getProfileByCreatorId().subscribe(profile => {\n      console.log(profile)\n      if (profile) {\n        let uname = profile.profile.username\n        if (this.mode == \"create\")\n          this.router.navigate(['/profile', uname])\n      }else{\n        this.isLoading = false\n      }\n    },e=>{\n      this.isLoading = false\n    })\n\n  }\n  createForm() {\n    this.form = new FormGroup({\n      username: new FormControl(null, {\n        validators: [Validators.required, Validators.minLength(3)]\n      }),\n      bio: new FormControl(null, { validators: [Validators.required] }),\n      image: new FormControl(null, {\n        validators: [Validators.required],\n        asyncValidators: [mimeType]\n      })\n    });\n  }\n\n  onImagePicked(event: Event) {\n    const file = (event.target as HTMLInputElement).files[0];\n    this.form.patchValue({ image: file });\n    this.form.get(\"image\").updateValueAndValidity();\n    const reader = new FileReader();\n    reader.onload = () => {\n      this.imagePreview = reader.result as string;\n    };\n    reader.readAsDataURL(file);\n  }\n\n  onSavePost() {\n    if (this.form.invalid) {\n      return;\n    }\n    this.isLoading = true;\n\n    if (this.mode === \"create\") {\n      this.profileService.addProfile(\n        this.form.value.username,\n        this.form.value.bio,\n        this.form.value.image\n      );\n    }\n    else {\n      this.profileService.updateProfile(\n        this.profileId,\n        this.form.value.username,\n        this.form.value.bio,\n        this.form.value.image\n      );\n    }\n    this.form.reset();\n  }\n\n\n  clearError() {\n    this.error = ''\n  }\n\n  checkUsername(uname) {\n    this.profileService.getProfileByUsername(uname).subscribe(profile => {\n      if (profile && uname !== this.uname) {\n        this.error = \"Username is already taken!\"\n      }\n\n    })\n  }\n}\n","<div class=\"container\">\n  <div *ngIf=\"isLoading\" style=\"text-align: center;\" class=\"loading-text\">\n    <app-spinner></app-spinner>\n </div>\n    <form [formGroup]=\"form\" (submit)=\"onSavePost()\">\n      <div class=\"form-group\">\n        <input\n          type=\"text\"\n          formControlName=\"username\"\n          class=\"form-control\"\n          placeholder=\"Username\"\n          (focus)=\"clearError()\" (blur)=\"checkUsername($event.target.value)\"\n        />\n        <ng-container *ngIf=\"error\">\n          <span class=\"text-danger\" *ngIf=\"form.get('username')\n           && (form.get('username').dirty || form.get('username').touched)\">\n              {{error}}</span>\n      </ng-container>\n        <span\n          class=\"text-danger\"\n          *ngIf=\"form.get('username').invalid && form.get('username').touched\"\n          >Please enter a post title.</span\n        >\n      </div>\n      <div class=\"form-group\">\n        <button\n          type=\"button\"\n          class=\"btn btn-outline-success\"\n          (click)=\"filePicker.click()\"\n        >\n          Pick Image\n        </button>\n        <input\n          type=\"file\"\n          class=\"form-control\"\n          #filePicker\n          (change)=\"onImagePicked($event)\"\n        />\n  \n        <div\n          class=\"image-preview\"\n          *ngIf=\"imagePreview !== '' && imagePreview && form.get('image').valid\"\n        >\n          <img [src]=\"imagePreview\" [alt]=\"form.value.title\" />\n        </div>\n        <span\n          class=\"text-danger\"\n          *ngIf=\"form.get('image').invalid && form.dirty && form.touched\"\n          >Please Choose a valid image.</span\n        >\n      </div>\n      <div class=\"form-group\">\n        <textarea\n          class=\"form-control\"\n          rows=\"4\"\n          formControlName=\"bio\"\n          placeholder=\"Your short Bio\"\n        ></textarea>\n        <span\n          class=\"text-danger\"\n          *ngIf=\"form.get('bio').invalid && form.get('bio').touched\"\n          >Please enter a Bio</span\n        >\n      </div>\n      <button class=\"btn btn-primary\" [disabled]=\"form.invalid || error\" type=\"submit\">\n        Save Profile\n      </button>\n    </form>\n  </div>\n  ","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, ParamMap, Router } from '@angular/router';\nimport { map } from 'rxjs/operators';\nimport { AuthService } from '../../auth/auth.service';\nimport { Post } from '../../posts/post.model';\nimport { ProfileService } from '../../services/profile.service';\nimport { Profile } from '../profile.model';\n\n@Component({\n  selector: 'app-view-profile',\n  templateUrl: './view-profile.component.html',\n  styleUrls: ['./view-profile.component.css']\n})\nexport class ViewProfileComponent implements OnInit {\n  profileId: string\n  isloading: boolean = false\n  profile: Profile\n  posts: Post[] = []\n  url\n  userId: string\n  constructor(private profileService: ProfileService,\n    private authService: AuthService,\n    public route: ActivatedRoute,\n    public router: Router,) { }\n\n  ngOnInit(): void {\n    this.userId = this.authService.getUserId()\n\n    this.url = this.router.url.split(\"/\")[1]\n\n    this.route.paramMap.subscribe((paramMap: ParamMap) => {\n      if (paramMap.has(\"profileId\")) {\n        this.profileId = paramMap.get(\"profileId\");\n        this.getProfileByUsername(this.profileId)\n        this.getCurrentUseersPost(this.profileId)\n      }\n      else{\n        this.router.navigate[(\"/\")]\n      }\n    })\n  }\n\n  getProfileByUsername(uname) {\n    this.isloading = true\n    this.profileService.getProfileByUsername(uname)\n      .subscribe(profile => {\n        this.profile = profile.profile\n        this.isloading = false\n      })\n  }\n\n  getCurrentUseersPost(uname) {\n    this.isloading = true\n    this.profileService.getMyPost(uname).pipe(\n      map(postData => {\n        return postData.post.map(post => {\n          return {\n            title: post.title,\n            content: post.content,\n            id: post._id,\n            imagePath: post.imagePath,\n            creator: post.creator,\n            postDate: post.postDate\n          };\n        });\n      })\n    ).subscribe(data => {\n      this.isloading = false\n      this.posts = data\n    })\n  }\n\n}\n","<hr>\n<div class=\"container py-5\">\n    <div *ngIf=\"isloading\" style=\"text-align: center;\" class=\"loading-text\">\n        <app-spinner></app-spinner>\n     </div>\n    <div class=\"row profile\" *ngIf = \"profile\">\n        <div  class=\"col-md-8 col-xs-12  order-2 order-lg-1\">\n            <h2 class=\"text-black font-weight-light mb-4\">{{profile.username}}</h2>\n            <a *ngIf=\"userId===profile.creator && url =='profile'\" [routerLink]=\"['../edit',profileId]\">Edit Profile</a>\n            <p>{{profile.bio}}</p>\n        </div>\n        <div class=\"col-md-4 col-xs-12 order-1 order-lg-2\" >\n            <img src={{profile.imagePath}} class=\"img-fluid w-50 rounded-circle mb-3\">        \n        </div>\n    </div>\n</div>\n\n\n<div class=\"container py-5\">\n    <h2  *ngIf = \"profile\" class=\"font-weight-light text-black\">{{profile.username}}'s Posts</h2>\n    <hr>\n    <div class=\"row\">\n       \n    <div *ngIf=\"isloading\" style=\"text-align: center;\" class=\"loading-text\">\n        <app-spinner></app-spinner>\n     </div>\n  \n     <div class=\"col-lg-12\">\n       <ng-container *ngIf=\"posts.length>0\">\n        <div class=\"d-block d-md-flex podcast-entry bg-white mb-5 aos-init aos-animate\"\n        *ngFor=\"let post of posts\" data-aos=\"fade-up\">\n        <div class=\"image\" [style.backgroundImage]=\"'url('+ post.imagePath +') ' \"></div>\n      <div class=\"text\">\n        <h3 class=\"font-weight-light\">\n          <a *ngIf=\"userId===post.creator\"  [routerLink]=\"['../../myposts',post.id]\"> {{ post.title }}</a>\n          <a *ngIf=\"userId!==post.creator\"  [routerLink]=\"['posts',post.id]\"> {{ post.title }}</a>\n        </h3>\n        <div class=\"text-white mb-3\">\n          <span class=\"text-black-opacity-05\">\n            <small>By Mike Smith <span class=\"sep\">/</span>{{post.postDate | date:'short'}}</small>\n          </span>\n        </div>\n\n        <div class=\"desc\">\n          <p>{{post.content |slice:0: 170 }}{{post.content.length > 170 ? ' ...Read More' : ''}}</p>\n        </div>\n      </div>\n      </div>\n    </ng-container>\n    <div *ngIf=\"posts.length==0 && !isloading\" style=\"text-align: center;\" class=\"loading-text\">\n      <h2 class=\"nopost\">No Posts written by this user</h2>\n   </div>\n      </div>\n</div>\n</div>\n\n","import { Injectable } from '@angular/core';\nimport { Post } from '../posts/post.model';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { BehaviorSubject, Subject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport {environment} from '../../environments/environment'\nconst BACKEND_URL = environment.apiUrl + \"/posts\"\n@Injectable({\n  providedIn: 'root'\n})\nexport class PostService {\n  private posts: Post[] = [];\n \n  private postsUpdated = new Subject<Post[]>();\n  public err = new BehaviorSubject<any>(null);\n  constructor(\n    private http: HttpClient, private router: Router\n  ) { }\n\n  getPostUpdateListener() {\n    return this.postsUpdated.asObservable();\n  }\n\n  addPost(title: string, content: string, imgpath: File, postDate: Date) {\n    const postData = new FormData();\n    postData.append(\"title\", title);\n    postData.append(\"content\", content);\n    postData.append(\"image\", imgpath, title);\n    postData.append(\"postDate\", postDate.toString());\n    this.http\n      .post<{ message: string; post: Post }>(\n        BACKEND_URL,\n        postData\n      )\n      .subscribe(responseData => {\n        this.err.next(null)\n        this.router.navigate([\"/\"]);\n\n\n      }),\n      err => {\n        this.err.next(err)\n      }\n  }\n\n  getPosts() {\n    this.http.get<{ message: string; posts: any }>(BACKEND_URL)\n      .pipe(\n        map(postData => {\n          return postData.posts.map(post => {\n            return {\n              title: post.title,\n              content: post.content,\n              id: post._id,\n              imagePath: post.imagePath,\n              creator: post.creator,\n              postDate: post.postDate\n            };\n          });\n        })\n      )\n      .subscribe(transformedPosts => {\n        this.err.next(null)\n\n        this.posts = transformedPosts;\n        this.postsUpdated.next([...this.posts]);\n      },\n        err => {\n          this.err.next(err)\n        });\n  }\n\n  getPost(id: string) {\n    return this.http.get<{\n      _id: string, title: string, content: string, imagePath: string,\n      creator: string,postDate:Date;\n    }>(\n      BACKEND_URL +\"/\" + id\n    );\n  }\n\n  getMyPost(id: string) {\n    this.http.get<{ message: string; posts: any }>(\n      BACKEND_URL + \"/mypost\"\n    ).pipe(\n      map(postData => {\n        return postData.posts.map(post => {\n          return {\n            title: post.title,\n            content: post.content,\n            id: post._id,\n            imagePath: post.imagePath,\n            creator: post.creator,\n            postDate: post.postDate\n          };\n        });\n      })\n    )\n      .subscribe(transformedPosts => {\n        this.err.next(null)\n\n        this.posts = transformedPosts;\n        this.postsUpdated.next([...this.posts]);\n      },\n        err => {\n          this.err.next(err)\n        });\n  }\n\n\n  updatePost(id: string, title: string, content: string, image: File | string) {\n    let postData: Post | FormData;\n    if (typeof image === \"object\") {\n      postData = new FormData();\n      postData.append(\"id\", id);\n      postData.append(\"title\", title);\n      postData.append(\"content\", content);\n      postData.append(\"image\", image, title);\n    } else {\n      postData = {\n        id: id,\n        title: title,\n        content: content,\n        imagePath: image,\n        creator: null\n      };\n    }\n    this.http\n      .put(BACKEND_URL + \"/\" +id, postData)\n      .subscribe(response => {\n        this.err.next(null)\n        this.router.navigate([\"/myposts\"]);\n      },\n        err => {\n          this.err.next(err)\n        });\n  }\n\n  deletePost(postId: string) {\n    this.http\n      .delete(BACKEND_URL +\"/\"+ postId)\n      .subscribe((data) => {\n\n        this.err.next(null)\n        const updatedPosts = this.posts.filter(post => post.id !== postId);\n        this.posts = updatedPosts;\n        this.postsUpdated.next([...this.posts]);\n        this.router.navigate([\"/\"]);\n\n\n      },\n        e => {\n          this.err.next(e)\n\n        });\n\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { BehaviorSubject, Subject } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { Profile } from '../profile/profile.model';\nimport {environment} from '../../environments/environment'\nconst BACKEND_URL = environment.apiUrl + \"/profile\"\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProfileService {\n\n  private profile: Profile;\n  private isProfileSet: boolean = false\n  private updatedProfile = new Subject<Profile>();\n  public err = new BehaviorSubject<any>(null);\n  constructor(\n    private http: HttpClient, private router: Router\n  ) { }\n\n  getProfileUpdateListener() {\n    return this.updatedProfile.asObservable();\n  }\n\n  getIsProfile() {\n    return this.profile;\n  }\n\n\n  getIsProfileSet() {\n    return this.isProfileSet\n  }\n\n\n  addProfile(title: string, content: string, imgpath: File) {\n    const postData = new FormData();\n    postData.append(\"username\", title);\n    postData.append(\"bio\", content);\n    postData.append(\"image\", imgpath, title);\n\n    this.http\n      .post<{ message: string; post: Profile }>(\n        BACKEND_URL +\"/create\",\n        postData\n      )\n      .subscribe(responseData => {\n        this.router.navigate(['/'])\n        this.err.next(null)\n\n      },\n        err => {\n          this.err.next(err)\n\n        })\n\n  }\n\n  updateProfile(id: string, username: string, bio: string, image: File | string) {\n    let profileData: Profile | FormData;\n    if (typeof image === \"object\") {\n      profileData = new FormData();\n      profileData.append(\"id\", id);\n      profileData.append(\"username\", username);\n      profileData.append(\"bio\", bio);\n      profileData.append(\"image\", image, username);\n    } else {\n      profileData = {\n        id: id,\n        username: username,\n        bio: bio,\n        imagePath: image,\n        creator: null\n      };\n    }\n\n    this.http\n      .put(BACKEND_URL+\"/edit/\" + id, profileData)\n      .subscribe(response => {\n\n        this.err.next(null)\n        this.router.navigate([\"/profile\"]);\n      },\n        err => {\n          console.log(err)\n          this.err.next(err)\n        });\n\n  }\n\n  getProfile() {\n\n    this.http.get<{ profile: any, message: string }>\n    (BACKEND_URL + \"/viewprofile\")\n      .subscribe(profile => {\n\n        let prof = profile.profile\n        this.profile = prof\n        this.isProfileSet = true\n        this.updatedProfile.next(profile.profile)\n        this.saveProfileData(profile.profile)\n      },\n        err => {\n        })\n\n  }\n\n  getProfileByCreatorId() {\n    return this.http.get<{ profile: any, message: string }>\n    (BACKEND_URL+\"/viewprofile\")\n  }\n\n  getPostUserByCreatorId(creatorId) {\n    return this.http.get<{ profile: any, message: string }>\n    (BACKEND_URL+\"/bycreator/\" + creatorId)\n  }\n\n  getAllUsers() {\n    return this.http.get<{ profile: any, message: string }>\n      (BACKEND_URL+\"/profiles\")\n  }\n\n  getProfileByUsername(uname: string) {\n    return this.http.get<{ profile: any, message: string }>\n      (BACKEND_URL +\"/\"+ uname)\n  }\n\n  getMyPost(uname: string) {\n    return this.http.get<{ post: any, message: string }>\n      (BACKEND_URL +\"/\"+ uname + \"/mypost\")\n\n  }\n\n  saveProfileData(profile) {\n    localStorage.setItem(\"profile\", profile)\n    localStorage.setItem(\"uname\", profile.username)\n  }\n\n  autogetProfile() {\n    const profile = localStorage.getItem(\"profile\")\n    if (profile) {\n      this.isProfileSet = true\n    }\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-spinner',\n  templateUrl: './spinner.component.html',\n  styleUrls: ['./spinner.component.css']\n})\nexport class SpinnerComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"text-center spinner\">\n    <div class=\"spinner-border\" role=\"status\">\n      <span class=\"sr-only\">Loading...</span>\n      \n    </div>\n    <h4> Please Wait ...</h4>\n  </div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n apiUrl : \"http://localhost:3000/api\"\n\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}